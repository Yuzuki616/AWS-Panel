{"version":3,"sources":["../../../src/directives/color/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Utilities\nimport {\n  classToHex,\n  isCssColor,\n  parseGradient,\n} from '../../util/colorUtils'\nimport colors from '../../util/colors'\n\n// Types\nimport { VuetifyThemeVariant } from 'types/services/theme'\nimport { VNode, VNodeDirective } from 'vue'\n\ninterface BorderModifiers {\n  top?: Boolean\n  right?: Boolean\n  bottom?: Boolean\n  left?: Boolean\n}\n\nfunction setTextColor (\n  el: HTMLElement,\n  color: string,\n  currentTheme: Partial<VuetifyThemeVariant>,\n) {\n  const cssColor = !isCssColor(color) ? classToHex(color, colors, currentTheme) : color\n\n  el.style.color = cssColor\n  el.style.caretColor = cssColor\n}\n\nfunction setBackgroundColor (\n  el: HTMLElement,\n  color: string,\n  currentTheme: Partial<VuetifyThemeVariant>,\n) {\n  const cssColor = !isCssColor(color) ? classToHex(color, colors, currentTheme) : color\n\n  el.style.backgroundColor = cssColor\n  el.style.borderColor = cssColor\n}\n\nfunction setBorderColor (\n  el: HTMLElement,\n  color: string,\n  currentTheme: Partial<VuetifyThemeVariant>,\n  modifiers?: BorderModifiers,\n) {\n  const cssColor = !isCssColor(color) ? classToHex(color, colors, currentTheme) : color\n\n  if (!modifiers || !Object.keys(modifiers).length) {\n    el.style.borderColor = cssColor\n    return\n  }\n\n  if (modifiers.top) el.style.borderTopColor = cssColor\n  if (modifiers.right) el.style.borderRightColor = cssColor\n  if (modifiers.bottom) el.style.borderBottomColor = cssColor\n  if (modifiers.left) el.style.borderLeftColor = cssColor\n}\n\nfunction setGradientColor (\n  el: HTMLElement,\n  gradient: string,\n  currentTheme: Partial<VuetifyThemeVariant>,\n) {\n  el.style.backgroundImage = `linear-gradient(${\n    parseGradient(gradient, colors, currentTheme)\n  })`\n}\n\nfunction updateColor (\n  el: HTMLElement,\n  binding: VNodeDirective,\n  node: VNode\n) {\n  const currentTheme = node.context!.$vuetify.theme.currentTheme\n\n  if (binding.arg === undefined) {\n    setBackgroundColor(el, binding.value, currentTheme)\n  } else if (binding.arg === 'text') {\n    setTextColor(el, binding.value, currentTheme)\n  } else if (binding.arg === 'border') {\n    setBorderColor(el, binding.value, currentTheme, binding.modifiers)\n  } else if (binding.arg === 'gradient') {\n    setGradientColor(el, binding.value, currentTheme)\n  }\n}\n\nfunction update (\n  el: HTMLElement,\n  binding: VNodeDirective,\n  node: VNode\n) {\n  if (binding.value === binding.oldValue) return\n\n  updateColor(el, binding, node)\n}\n\nexport const Color = {\n  bind: updateColor,\n  update,\n}\n\nexport default Color\n"],"sourceRoot":"","file":"index.js"}