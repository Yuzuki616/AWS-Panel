{"version":3,"sources":["../../../src/services/lang/index.ts"],"names":[],"mappings":"AAAA;AACA,SAAS,OAAT,QAAwB,YAAxB,C,CAEA;;AACA,SAAS,oBAAT,QAAqC,oBAArC;AACA,SAAS,YAAT,EAAuB,WAAvB,QAA0C,oBAA1C;AASA,MAAM,WAAW,GAAG,WAApB;AACA,MAAM,QAAQ,GAAG,MAAM,CAAC,eAAD,CAAvB;;AAEA,SAAS,cAAT,CACE,MADF,EAEE,GAFF,EAGE,YAAY,GAAG,KAHjB,EAIE,aAJF,EAI8B;AAE5B,QAAM,QAAQ,GAAG,GAAG,CAAC,OAAJ,CAAY,WAAZ,EAAyB,EAAzB,CAAjB;AACA,MAAI,WAAW,GAAG,oBAAoB,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAtC;;AAEA,MAAI,WAAW,KAAK,QAApB,EAA8B;AAC5B,QAAI,YAAJ,EAAkB;AAChB,MAAA,YAAY,CAAC,oBAAoB,QAAQ,yBAA7B,CAAZ;AACA,MAAA,WAAW,GAAG,GAAd;AACD,KAHD,MAGO;AACL,MAAA,WAAW,CAAC,oBAAoB,QAAQ,sCAA7B,CAAX;AACA,MAAA,WAAW,GAAG,cAAc,CAAC,aAAD,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,aAA3B,CAA5B;AACD;AACF;;AAED,SAAO,WAAP;AACD;;AAED,OAAM,MAAO,IAAP,SAAoB,OAApB,CAA2B;AAW/B,EAAA,WAAA,CAAa,MAAb,EAAkC;AAChC;AAPK,SAAA,aAAA,GAAgB,IAAhB;AASL,UAAM;AACJ,MAAA,OADI;AAEJ,MAAA,OAFI;AAGJ,MAAA;AAHI,QAIF,MAAM,CAAC,IAAI,CAAC,QAAN,CAJV;AAMA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,UAAL,GAAkB,CAAC,IAAI,KAAK,iBAA5B;AACD;;AAEM,EAAA,aAAa,CAAE,GAAF,EAAa;AAC/B,UAAM,WAAW,GAAG,KAAK,OAAL,CAAa,KAAK,OAAlB,CAApB;AACA,UAAM,aAAa,GAAG,KAAK,OAAL,CAAa,KAAK,aAAlB,CAAtB;AAEA,WAAO,cAAc,CAAC,WAAD,EAAc,GAAd,EAAmB,KAAnB,EAA0B,aAA1B,CAArB;AACD;;AAEM,EAAA,CAAC,CAAE,GAAF,EAAe,GAAG,MAAlB,EAA+B;AACrC,QAAI,CAAC,GAAG,CAAC,UAAJ,CAAe,WAAf,CAAL,EAAkC,OAAO,KAAK,OAAL,CAAa,GAAb,EAAkB,MAAlB,CAAP;AAElC,WAAO,KAAK,UAAL,CAAgB,GAAhB,EAAqB,GAAG,MAAxB,CAAP;AACD;;AAEO,EAAA,iBAAiB,CAAE,GAAF,EAAe,GAAG,MAAlB,EAA+B;AACtD,WAAO,KAAK,OAAL,CAAa,KAAK,aAAL,CAAmB,GAAnB,CAAb,EAAsC,MAAtC,CAAP;AACD;;AAEO,EAAA,OAAO,CAAE,GAAF,EAAe,MAAf,EAA4B;AACzC,WAAO,GAAG,CAAC,OAAJ,CAAY,YAAZ,EAA0B,CAAC,KAAD,EAAgB,KAAhB,KAAiC;AAChE;AACA,aAAO,MAAM,CAAC,MAAM,CAAC,CAAC,KAAF,CAAP,CAAb;AACD,KAHM,CAAP;AAID;;AA/C8B;AACxB,IAAA,CAAA,QAAA,GAAmB,MAAnB","sourcesContent":["// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { consoleError, consoleWarn } from '../../util/console'\n\n// Types\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyLocale,\n  Lang as ILang,\n} from 'vuetify/types/services/lang'\n\nconst LANG_PREFIX = '$vuetify.'\nconst fallback = Symbol('Lang fallback')\n\nfunction getTranslation (\n  locale: VuetifyLocale,\n  key: string,\n  usingDefault = false,\n  defaultLocale: VuetifyLocale\n): string {\n  const shortKey = key.replace(LANG_PREFIX, '')\n  let translation = getObjectValueByPath(locale, shortKey, fallback) as string | typeof fallback\n\n  if (translation === fallback) {\n    if (usingDefault) {\n      consoleError(`Translation key \"${shortKey}\" not found in fallback`)\n      translation = key\n    } else {\n      consoleWarn(`Translation key \"${shortKey}\" not found, falling back to default`)\n      translation = getTranslation(defaultLocale, key, true, defaultLocale)\n    }\n  }\n\n  return translation\n}\n\nexport class Lang extends Service implements ILang {\n  static property: 'lang' = 'lang'\n\n  public current: ILang['current']\n\n  public defaultLocale = 'en'\n\n  public locales: ILang['locales']\n\n  private translator: ILang['t']\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      current,\n      locales,\n      t,\n    } = preset[Lang.property]\n\n    this.current = current\n    this.locales = locales\n    this.translator = t || this.defaultTranslator\n  }\n\n  public currentLocale (key: string) {\n    const translation = this.locales[this.current]\n    const defaultLocale = this.locales[this.defaultLocale]\n\n    return getTranslation(translation, key, false, defaultLocale)\n  }\n\n  public t (key: string, ...params: any[]) {\n    if (!key.startsWith(LANG_PREFIX)) return this.replace(key, params)\n\n    return this.translator(key, ...params)\n  }\n\n  private defaultTranslator (key: string, ...params: any[]) {\n    return this.replace(this.currentLocale(key), params)\n  }\n\n  private replace (str: string, params: any[]) {\n    return str.replace(/\\{(\\d+)\\}/g, (match: string, index: string) => {\n      /* istanbul ignore next */\n      return String(params[+index])\n    })\n  }\n}\n"],"sourceRoot":"","file":"index.js"}