{"version":3,"sources":["../../../src/services/goto/easing-patterns.ts"],"names":[],"mappings":"AAEA;AACA,OAAO,MAAM,MAAM,GAAI,CAAD,IAAe,CAA9B,C,CACP;;AACA,OAAO,MAAM,UAAU,GAAI,CAAD,IAAe,CAAC,IAAI,CAAvC,C,CACP;;AACA,OAAO,MAAM,WAAW,GAAI,CAAD,IAAe,CAAC,IAAI,IAAI,CAAR,CAApC,C,CACP;;AACA,OAAO,MAAM,aAAa,GAAI,CAAD,IAAgB,CAAC,GAAG,GAAJ,GAAU,IAAI,CAAC,IAAI,CAAnB,GAAuB,CAAC,CAAD,GAAK,CAAC,IAAI,IAAI,CAAT,IAAc,CAAhF,C,CACP;;AACA,OAAO,MAAM,WAAW,GAAI,CAAD,IAAe,CAAC,IAAI,CAAxC,C,CACP;;AACA,OAAO,MAAM,YAAY,GAAI,CAAD,IAAe,EAAE,CAAF,IAAO,CAAP,GAAW,CAA/C,C,CACP;;AACA,OAAO,MAAM,cAAc,GAAI,CAAD,IAAe,CAAC,GAAG,GAAJ,GAAU,IAAI,CAAC,IAAI,CAAnB,GAAuB,CAAC,CAAC,GAAG,CAAL,KAAW,IAAI,CAAJ,GAAQ,CAAnB,KAAyB,IAAI,CAAJ,GAAQ,CAAjC,IAAsC,CAAnG,C,CACP;;AACA,OAAO,MAAM,WAAW,GAAI,CAAD,IAAe,CAAC,IAAI,CAAxC,C,CACP;;AACA,OAAO,MAAM,YAAY,GAAI,CAAD,IAAe,IAAI,EAAE,CAAF,IAAO,CAA/C,C,CACP;;AACA,OAAO,MAAM,cAAc,GAAI,CAAD,IAAgB,CAAC,GAAG,GAAJ,GAAU,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAZ,GAAgB,CAA1B,GAA8B,IAAI,IAAI,EAAE,CAAN,GAAU,CAAV,GAAc,CAAd,GAAkB,CAA3F,C,CACP;;AACA,OAAO,MAAM,WAAW,GAAI,CAAD,IAAe,CAAC,IAAI,CAAxC,C,CACP;;AACA,OAAO,MAAM,YAAY,GAAI,CAAD,IAAe,IAAI,EAAE,CAAF,IAAO,CAA/C,C,CACP;;AACA,OAAO,MAAM,cAAc,GAAI,CAAD,IAAe,CAAC,GAAG,GAAJ,GAAU,KAAK,CAAC,IAAI,CAApB,GAAwB,IAAI,KAAK,EAAE,CAAF,IAAO,CAA9E","sourcesContent":["export type EasingFunction = (t: number) => number\n\n// linear\nexport const linear = (t: number) => t\n// accelerating from zero velocity\nexport const easeInQuad = (t: number) => t ** 2\n// decelerating to zero velocity\nexport const easeOutQuad = (t: number) => t * (2 - t)\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = (t: number) => (t < 0.5 ? 2 * t ** 2 : -1 + (4 - 2 * t) * t)\n// accelerating from zero velocity\nexport const easeInCubic = (t: number) => t ** 3\n// decelerating to zero velocity\nexport const easeOutCubic = (t: number) => --t ** 3 + 1\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = (t: number) => t < 0.5 ? 4 * t ** 3 : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n// accelerating from zero velocity\nexport const easeInQuart = (t: number) => t ** 4\n// decelerating to zero velocity\nexport const easeOutQuart = (t: number) => 1 - --t ** 4\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = (t: number) => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t)\n// accelerating from zero velocity\nexport const easeInQuint = (t: number) => t ** 5\n// decelerating to zero velocity\nexport const easeOutQuint = (t: number) => 1 + --t ** 5\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = (t: number) => t < 0.5 ? 16 * t ** 5 : 1 + 16 * --t ** 5\n"],"sourceRoot":"","file":"easing-patterns.js"}