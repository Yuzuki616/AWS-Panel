{"version":3,"sources":["../../../../src/components/VCalendar/modes/stack.ts"],"names":[],"mappings":"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","sourcesContent":["import { CalendarEventOverlapMode, CalendarEventVisual } from 'vuetify/types'\nimport { getOverlapGroupHandler, getVisuals, hasOverlap, getNormalizedRange } from './common'\nimport { getTimestampIdentifier } from '../util/timestamp'\n\ninterface Group {\n  start: number\n  end: number\n  visuals: CalendarEventVisual[]\n}\n\ninterface Node {\n  parent: Node | null\n  sibling: boolean\n  index: number\n  visual: CalendarEventVisual\n  start: number\n  end: number\n  children: Node[]\n}\n\nconst FULL_WIDTH = 100\n\nconst DEFAULT_OFFSET = 5\n\nconst WIDTH_MULTIPLIER = 1.7\n\n/**\n * Variation of column mode where events can be stacked. The priority of this\n * mode is to stack events together taking up the least amount of space while\n * trying to ensure the content of the event is always visible as well as its\n * start and end. A sibling column has intersecting event content and must be\n * placed beside each other. Non-sibling columns are offset by 5% from the\n * previous column. The width is scaled by 1.7 so the events overlap and\n * whitespace is reduced. If there is a hole in columns the event width is\n * scaled up so it intersects with the next column. The columns have equal\n * width in the space they are given. If the event doesn't have any to the\n * right of it that intersect with it's content it's right side is extended\n * to the right side.\n */\n\nexport const stack: CalendarEventOverlapMode = (events, firstWeekday, overlapThreshold) => {\n  const handler = getOverlapGroupHandler(firstWeekday)\n\n  // eslint-disable-next-line max-statements\n  return (day, dayEvents, timed, reset) => {\n    if (!timed) {\n      return handler.getVisuals(day, dayEvents, timed, reset)\n    }\n\n    const dayStart = getTimestampIdentifier(day)\n    const visuals = getVisuals(dayEvents, dayStart)\n    const groups = getGroups(visuals, dayStart)\n\n    for (const group of groups) {\n      const nodes: Node[] = []\n\n      for (const visual of group.visuals) {\n        const child = getNode(visual, dayStart)\n        const index = getNextIndex(child, nodes)\n\n        if (index === false) {\n          const parent = getParent(child, nodes)\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            child.index = parent.index + 1\n            parent.children.push(child)\n          }\n        } else {\n          const [parent] = getOverlappingRange(child, nodes, index - 1, index - 1)\n          const children = getOverlappingRange(child, nodes, index + 1, index + nodes.length, true)\n\n          child.children = children\n          child.index = index\n\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            parent.children.push(child)\n          }\n\n          for (const grand of children) {\n            if (grand.parent === parent) {\n              grand.parent = child\n            }\n\n            const grandNext = grand.index - child.index <= 1\n            if (grandNext && child.sibling &&\n              hasOverlap(child.start, addTime(child.start, overlapThreshold), grand.start, grand.end)) {\n              grand.sibling = true\n            }\n          }\n        }\n\n        nodes.push(child)\n      }\n\n      calculateBounds(nodes, overlapThreshold)\n    }\n\n    visuals.sort((a, b) => (a.left - b.left) || (a.event.startTimestampIdentifier - b.event.startTimestampIdentifier))\n\n    return visuals\n  }\n}\n\nfunction calculateBounds (nodes: Node[], overlapThreshold: number) {\n  for (const node of nodes) {\n    const { visual, parent } = node\n    const columns = getMaxChildIndex(node) + 1\n    const spaceLeft = parent ? parent.visual.left : 0\n    const spaceWidth = FULL_WIDTH - spaceLeft\n    const offset = Math.min(DEFAULT_OFFSET, FULL_WIDTH / columns)\n    const columnWidthMultiplier = getColumnWidthMultiplier(node, nodes)\n    const columnOffset = spaceWidth / (columns - node.index + 1)\n    const columnWidth = spaceWidth / (columns - node.index + (node.sibling ? 1 : 0)) * columnWidthMultiplier\n\n    if (parent) {\n      visual.left = node.sibling\n        ? spaceLeft + columnOffset\n        : spaceLeft + offset\n    }\n\n    visual.width = hasFullWidth(node, nodes, overlapThreshold)\n      ? FULL_WIDTH - visual.left\n      : Math.min(FULL_WIDTH - visual.left, columnWidth * WIDTH_MULTIPLIER)\n  }\n}\n\nfunction getColumnWidthMultiplier (node: Node, nodes: Node[]): number {\n  if (!node.children.length) {\n    return 1\n  }\n\n  const maxColumn = node.index + nodes.length\n  const minColumn = node.children.reduce((min, c) => Math.min(min, c.index), maxColumn)\n\n  return minColumn - node.index\n}\n\nfunction getOverlappingIndices (node: Node, nodes: Node[]): number[] {\n  const indices: number[] = []\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end)) {\n      indices.push(other.index)\n    }\n  }\n  return indices\n}\n\nfunction getNextIndex (node: Node, nodes: Node[]): number | false {\n  const indices = getOverlappingIndices(node, nodes)\n  indices.sort()\n\n  for (let i = 0; i < indices.length; i++) {\n    if (i < indices[i]) {\n      return i\n    }\n  }\n  return false\n}\n\nfunction getOverlappingRange (node: Node, nodes: Node[], indexMin: number, indexMax: number, returnFirstColumn = false): Node[] {\n  const overlapping: Node[] = []\n  for (const other of nodes) {\n    if (other.index >= indexMin && other.index <= indexMax && hasOverlap(node.start, node.end, other.start, other.end)) {\n      overlapping.push(other)\n    }\n  }\n  if (returnFirstColumn && overlapping.length > 0) {\n    const first = overlapping.reduce((min, n) => Math.min(min, n.index), overlapping[0].index)\n    return overlapping.filter(n => n.index === first)\n  }\n  return overlapping\n}\n\nfunction getParent (node: Node, nodes: Node[]): Node | null {\n  let parent: Node | null = null\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end) && (parent === null || other.index > parent.index)) {\n      parent = other\n    }\n  }\n  return parent\n}\n\nfunction hasFullWidth (node: Node, nodes: Node[], overlapThreshold: number): boolean {\n  for (const other of nodes) {\n    if (other !== node &&\n      other.index > node.index &&\n      hasOverlap(node.start, addTime(node.start, overlapThreshold), other.start, other.end)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction getGroups (visuals: CalendarEventVisual[], dayStart: number): Group[] {\n  const groups: Group[] = []\n\n  for (const visual of visuals) {\n    const [start, end] = getNormalizedRange(visual.event, dayStart)\n    let added = false\n\n    for (const group of groups) {\n      if (hasOverlap(start, end, group.start, group.end)) {\n        group.visuals.push(visual)\n        group.end = Math.max(group.end, end)\n        added = true\n        break\n      }\n    }\n\n    if (!added) {\n      groups.push({ start, end, visuals: [visual] })\n    }\n  }\n\n  return groups\n}\n\nfunction getNode (visual: CalendarEventVisual, dayStart: number): Node {\n  const [start, end] = getNormalizedRange(visual.event, dayStart)\n\n  return {\n    parent: null,\n    sibling: true,\n    index: 0,\n    visual,\n    start,\n    end,\n    children: [],\n  }\n}\n\nfunction getMaxChildIndex (node: Node): number {\n  let max = node.index\n  for (const child of node.children) {\n    const childMax = getMaxChildIndex(child)\n    if (childMax > max) {\n      max = childMax\n    }\n  }\n  return max\n}\n\nfunction addTime (identifier: number, minutes: number): number {\n  const removeMinutes = identifier % 100\n  const totalMinutes = removeMinutes + minutes\n  const addHours = Math.floor(totalMinutes / 60)\n  const addMinutes = totalMinutes % 60\n\n  return identifier - removeMinutes + addHours * 100 + addMinutes\n}\n"],"sourceRoot":"","file":"stack.js"}