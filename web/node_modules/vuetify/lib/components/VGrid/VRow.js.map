{"version":3,"sources":["../../../src/components/VGrid/VRow.ts"],"names":[],"mappings":"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","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n"],"sourceRoot":"","file":"VRow.js"}