{"version":3,"sources":["../../../src/components/VGrid/VContainer.ts"],"names":[],"mappings":"AAAA,OAAO,0CAAP;AACA,OAAO,0CAAP;AAEA,OAAO,IAAP,MAAiB,QAAjB;AAEA,OAAO,SAAP,MAAsB,sBAAtB;AAEA;;AACA,eAAe,IAAI,CAAC,WAAD,CAAJ,CAAkB,MAAlB,CAAyB;AACtC,EAAA,IAAI,EAAE,aADgC;AAEtC,EAAA,UAAU,EAAE,IAF0B;AAGtC,EAAA,KAAK,EAAE;AACL,IAAA,EAAE,EAAE,MADC;AAEL,IAAA,GAAG,EAAE;AACH,MAAA,IAAI,EAAE,MADH;AAEH,MAAA,OAAO,EAAE;AAFN,KAFA;AAML,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,OADD;AAEL,MAAA,OAAO,EAAE;AAFJ;AANF,GAH+B;;AActC,EAAA,MAAM,CAAE,CAAF,EAAK;AAAE,IAAA,KAAF;AAAS,IAAA,IAAT;AAAe,IAAA;AAAf,GAAL,EAA8B;AAClC,QAAI,OAAJ;AACA,UAAM;AAAE,MAAA;AAAF,QAAY,IAAlB;;AACA,QAAI,KAAJ,EAAW;AACT;AACA,MAAA,IAAI,CAAC,KAAL,GAAa,EAAb;AACA,MAAA,OAAO,GAAG,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,MAAnB,CAA0B,GAAG,IAAG;AACxC;AACA;AACA,YAAI,GAAG,KAAK,MAAZ,EAAoB,OAAO,KAAP;AAEpB,cAAM,KAAK,GAAG,KAAK,CAAC,GAAD,CAAnB,CALwC,CAOxC;AACA;;AACA,YAAI,GAAG,CAAC,UAAJ,CAAe,OAAf,CAAJ,EAA6B;AAC3B,UAAA,IAAI,CAAC,KAAL,CAAY,GAAZ,IAAmB,KAAnB;AACA,iBAAO,KAAP;AACD;;AAED,eAAO,KAAK,IAAI,OAAO,KAAP,KAAiB,QAAjC;AACD,OAfS,CAAV;AAgBD;;AAED,QAAI,KAAK,CAAC,EAAV,EAAc;AACZ,MAAA,IAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,QAAL,IAAiB,EAAjC;AACA,MAAA,IAAI,CAAC,QAAL,CAAc,EAAd,GAAmB,KAAK,CAAC,EAAzB;AACD;;AAED,WAAO,CAAC,CACN,KAAK,CAAC,GADA,EAEN,SAAS,CAAC,IAAD,EAAO;AACd,MAAA,WAAW,EAAE,WADC;AAEd,MAAA,KAAK,EAAE,KAAK,CAAM;AAChB,4BAAoB,KAAK,CAAC;AADV,OAAN,CAAL,CAEJ,MAFI,CAEG,OAAO,IAAI,EAFd;AAFO,KAAP,CAFH,EAQN,QARM,CAAR;AAUD;;AArDqC,CAAzB,CAAf","sourcesContent":["import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n"],"sourceRoot":"","file":"VContainer.js"}