{"version":3,"sources":["../../../src/components/VItemGroup/VItem.ts"],"names":[],"mappings":"AAAA;AACA,SAAS,OAAO,IAAI,gBAApB,QAA4C,wBAA5C,C,CAEA;;AACA,OAAO,MAAP,MAAmB,mBAAnB;AACA,SAAS,WAAT,QAA4B,oBAA5B,C,CAEA;;AACA,OAAO,GAAP,MAAgB,KAAhB;AAGA;;AACA,OAAO,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAJ,CAAW;AACjC,EAAA,KAAK,EAAE;AACL,IAAA,WAAW,EAAE,MADR;AAEL,IAAA,KAAK,EAAE;AACL,MAAA,QAAQ,EAAE;AADL;AAFF,GAD0B;AAQjC,EAAA,IAAI,EAAE,OAAO;AACX,IAAA,QAAQ,EAAE;AADC,GAAP,CAR2B;AAYjC,EAAA,OAAO,EAAE;AACP,IAAA,MAAM,GAAA;AACJ,WAAK,QAAL,GAAgB,CAAC,KAAK,QAAtB;AACD;;AAHM,GAZwB;;AAkBjC,EAAA,MAAM,GAAA;AACJ,QAAI,CAAC,KAAK,YAAL,CAAkB,OAAvB,EAAgC;AAC9B,MAAA,WAAW,CAAC,wCAAD,EAA2C,IAA3C,CAAX;AAEA,aAAO,IAAP;AACD;;AAED,QAAI,OAAJ;AAEA;;AACA,QAAI,KAAK,YAAL,CAAkB,OAAtB,EAA+B;AAC7B,MAAA,OAAO,GAAG,KAAK,YAAL,CAAkB,OAAlB,CAA0B;AAClC,QAAA,MAAM,EAAE,KAAK,QADqB;AAElC,QAAA,MAAM,EAAE,KAAK;AAFqB,OAA1B,CAAV;AAID;;AAED,QAAI,KAAK,CAAC,OAAN,CAAc,OAAd,KAA0B,OAAO,CAAC,MAAR,KAAmB,CAAjD,EAAoD;AAClD,MAAA,OAAO,GAAG,OAAO,CAAC,CAAD,CAAjB;AACD;;AAED,QAAI,CAAC,OAAD,IAAY,KAAK,CAAC,OAAN,CAAc,OAAd,CAAZ,IAAsC,CAAC,OAAO,CAAC,GAAnD,EAAwD;AACtD,MAAA,WAAW,CAAC,6CAAD,EAAgD,IAAhD,CAAX;AAEA,aAAO,OAAP;AACD;;AAED,IAAA,OAAO,CAAC,IAAR,GAAe,KAAK,EAAL,CAAQ,OAAO,CAAC,IAAR,IAAgB,EAAxB,EAA4B,OAAO,CAAC,GAApC,EAA0C;AACvD,MAAA,KAAK,EAAE;AAAE,SAAC,KAAK,WAAN,GAAoB,KAAK;AAA3B;AADgD,KAA1C,CAAf;AAIA,WAAO,OAAP;AACD;;AAlDgC,CAAX,CAAjB;AAqDP,eAAe,MAAM,CACnB,QADmB,EAEnB,gBAAgB,CAAC,WAAD,EAAc,QAAd,EAAwB,cAAxB,CAFG,CAAN,CAGb,MAHa,CAGN;AACP,EAAA,IAAI,EAAE;AADC,CAHM,CAAf","sourcesContent":["// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\nimport { VNode, ScopedSlotChildren } from 'vue/types/vnode'\n\n/* @vue/component */\nexport const BaseItem = Vue.extend({\n  props: {\n    activeClass: String,\n    value: {\n      required: false,\n    },\n  },\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  methods: {\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default) {\n      consoleWarn('v-item is missing a default scopedSlot', this)\n\n      return null as any\n    }\n\n    let element: VNode | ScopedSlotChildren\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0]\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-item should only contain a single element', this)\n\n      return element as any\n    }\n\n    element.data = this._b(element.data || {}, element.tag!, {\n      class: { [this.activeClass]: this.isActive },\n    })\n\n    return element\n  },\n})\n\nexport default mixins(\n  BaseItem,\n  GroupableFactory('itemGroup', 'v-item', 'v-item-group')\n).extend({\n  name: 'v-item',\n})\n"],"sourceRoot":"","file":"VItem.js"}