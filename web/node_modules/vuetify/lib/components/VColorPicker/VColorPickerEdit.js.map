{"version":3,"sources":["../../../src/components/VColorPicker/VColorPickerEdit.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VColorPickerEdit.sass'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\n\n// Helpers\nimport { parseHex } from '../../util/colorUtils'\n\n// Types\nimport Vue, { VNode, PropType } from 'vue'\nimport { VColorPickerColor, fromRGBA, fromHexa, fromHSLA } from './util'\n\ntype Input = [string, number, string]\n\nexport type Mode = {\n  inputs?: Input[]\n  from: Function\n}\n\nexport const modes = {\n  rgba: {\n    inputs: [\n      ['r', 255, 'int'],\n      ['g', 255, 'int'],\n      ['b', 255, 'int'],\n      ['a', 1, 'float'],\n    ],\n    from: fromRGBA,\n  },\n  hsla: {\n    inputs: [\n      ['h', 360, 'int'],\n      ['s', 1, 'float'],\n      ['l', 1, 'float'],\n      ['a', 1, 'float'],\n    ],\n    from: fromHSLA,\n  },\n  hexa: {\n    from: fromHexa,\n  },\n} as { [key: string]: Mode }\n\nexport default Vue.extend({\n  name: 'v-color-picker-edit',\n\n  props: {\n    color: Object as PropType<VColorPickerColor>,\n    disabled: Boolean,\n    hideAlpha: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: (v: string) => Object.keys(modes).includes(v),\n    },\n  },\n\n  data () {\n    return {\n      modes,\n      internalMode: this.mode,\n    }\n  },\n\n  computed: {\n    currentMode (): Mode {\n      return this.modes[this.internalMode]\n    },\n  },\n\n  watch: {\n    mode (mode) {\n      this.internalMode = mode\n    },\n  },\n\n  created () {\n    this.internalMode = this.mode\n  },\n\n  methods: {\n    getValue (v: any, type: string) {\n      if (type === 'float') return Math.round(v * 100) / 100\n      else if (type === 'int') return Math.round(v)\n      else return 0\n    },\n    parseValue (v: string, type: string) {\n      if (type === 'float') return parseFloat(v)\n      else if (type === 'int') return parseInt(v, 10) || 0\n      else return 0\n    },\n    changeMode () {\n      const modes = Object.keys(this.modes)\n      const index = modes.indexOf(this.internalMode)\n      const newMode = modes[(index + 1) % modes.length]\n      this.internalMode = newMode\n      this.$emit('update:mode', newMode)\n    },\n    genInput (target: string, attrs: any, value: any, on: any): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__input',\n      }, [\n        this.$createElement('input', {\n          key: target,\n          attrs,\n          domProps: {\n            value,\n          },\n          on,\n        }),\n        this.$createElement('span', target.toUpperCase()),\n      ])\n    },\n    genInputs (): VNode[] | VNode {\n      if (this.internalMode === 'hexa') {\n        const hex = this.color.hexa\n        const value = this.hideAlpha && hex.endsWith('FF') ? hex.substr(0, 7) : hex\n        return this.genInput(\n          'hex',\n          {\n            maxlength: this.hideAlpha ? 7 : 9,\n            disabled: this.disabled,\n          },\n          value,\n          {\n            change: (e: Event) => {\n              const el = e.target as HTMLInputElement\n              this.$emit('update:color', this.currentMode.from(parseHex(el.value)))\n            },\n          }\n        )\n      } else {\n        const inputs = this.hideAlpha ? this.currentMode.inputs!.slice(0, -1) : this.currentMode.inputs!\n        return inputs.map(([target, max, type]) => {\n          const value = this.color[this.internalMode as keyof VColorPickerColor] as any\n          return this.genInput(\n            target,\n            {\n              type: 'number',\n              min: 0,\n              max,\n              step: type === 'float' ? '0.01' : type === 'int' ? '1' : undefined,\n              disabled: this.disabled,\n            },\n            this.getValue(value[target], type),\n            {\n              input: (e: Event) => {\n                const el = e.target as HTMLInputElement\n                const newVal = this.parseValue(el.value || '0', type)\n\n                this.$emit('update:color', this.currentMode.from(\n                  Object.assign({}, value, { [target]: newVal }),\n                  this.color.alpha\n                ))\n              },\n            }\n          )\n        })\n      }\n    },\n    genSwitch (): VNode {\n      return this.$createElement(VBtn, {\n        props: {\n          small: true,\n          icon: true,\n          disabled: this.disabled,\n        },\n        on: {\n          click: this.changeMode,\n        },\n      }, [\n        this.$createElement(VIcon, '$unfold'),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-color-picker__edit',\n    }, [\n      this.genInputs(),\n      !this.hideModeSwitch && this.genSwitch(),\n    ])\n  },\n})\n"],"sourceRoot":"","file":"VColorPickerEdit.js"}