{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanels.ts"],"names":[],"mappings":"AAAA;AACA,OAAO,8DAAP,C,CAEA;;AACA,SAAS,aAAT,QAAiD,0BAAjD,C,CAGA;;AACA,SAAS,QAAT,QAAyB,oBAAzB;AAKA;;AACA,eAAe,aAAa,CAAC,MAAd,CAAqB;AAClC,EAAA,IAAI,EAAE,oBAD4B;;AAGlC,EAAA,OAAO,GAAA;AACL,WAAO;AACL,MAAA,eAAe,EAAE;AADZ,KAAP;AAGD,GAPiC;;AASlC,EAAA,KAAK,EAAE;AACL,IAAA,SAAS,EAAE,OADN;AAEL,IAAA,QAAQ,EAAE,OAFL;AAGL,IAAA,IAAI,EAAE,OAHD;AAIL,IAAA,KAAK,EAAE,OAJF;AAKL,IAAA,SAAS,EAAE,OALN;AAML,IAAA,KAAK,EAAE,OANF;AAOL,IAAA,MAAM,EAAE,OAPH;AAQL,IAAA,QAAQ,EAAE,OARL;AASL,IAAA,IAAI,EAAE;AATD,GAT2B;AAqBlC,EAAA,QAAQ,EAAE;AACR,IAAA,OAAO,GAAA;AACL,aAAO,EACL,GAAG,aAAa,CAAC,OAAd,CAAsB,QAAtB,CAA+B,OAA/B,CAAuC,IAAvC,CAA4C,IAA5C,CADE;AAEL,8BAAsB,IAFjB;AAGL,yCAAiC,KAAK,SAHjC;AAIL,oCAA4B,KAAK,IAJ5B;AAKL,qCAA6B,KAAK,KAL7B;AAML,yCAAiC,KAAK,SANjC;AAOL,qCAA6B,KAAK,KAP7B;AAQL,sCAA8B,KAAK,MAR9B;AASL,oCAA4B,KAAK;AAT5B,OAAP;AAWD;;AAbO,GArBwB;;AAqClC,EAAA,OAAO,GAAA;AACL;AACA,QAAI,KAAK,MAAL,CAAY,cAAZ,CAA2B,QAA3B,CAAJ,EAA0C;AACxC,MAAA,QAAQ,CAAC,QAAD,EAAW,UAAX,EAAuB,IAAvB,CAAR;AACD;AAED;;;AACA,QACE,KAAK,CAAC,OAAN,CAAc,KAAK,KAAnB,KACA,KAAK,KAAL,CAAW,MAAX,GAAoB,CADpB,IAEA,OAAO,KAAK,KAAL,CAAW,CAAX,CAAP,KAAyB,SAH3B,EAIE;AACA,MAAA,QAAQ,CAAC,8BAAD,EAAiC,iBAAjC,EAAoD,IAApD,CAAR;AACD;AACF,GAnDiC;;AAqDlC,EAAA,OAAO,EAAE;AACP,IAAA,UAAU,CAAE,IAAF,EAAqD,KAArD,EAAkE;AAC1E,YAAM,KAAK,GAAG,KAAK,QAAL,CAAc,IAAd,EAAoB,KAApB,CAAd;AACA,YAAM,SAAS,GAAG,KAAK,QAAL,CAAc,IAAd,EAAoB,KAAK,GAAG,CAA5B,CAAlB;AAEA,MAAA,IAAI,CAAC,QAAL,GAAgB,KAAK,YAAL,CAAkB,KAAlB,CAAhB;AACA,MAAA,IAAI,CAAC,YAAL,GAAoB,KAAK,YAAL,CAAkB,SAAlB,CAApB;AACD;;AAPM;AArDyB,CAArB,CAAf","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n"],"sourceRoot":"","file":"VExpansionPanels.js"}