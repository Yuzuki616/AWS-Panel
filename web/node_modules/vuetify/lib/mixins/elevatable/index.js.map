{"version":3,"sources":["../../../src/mixins/elevatable/index.ts"],"names":[],"mappings":"AAAA,OAAO,GAAP,MAAgB,KAAhB;AAEA,eAAe,GAAG,CAAC,MAAJ,CAAW;AACxB,EAAA,IAAI,EAAE,YADkB;AAGxB,EAAA,KAAK,EAAE;AACL,IAAA,SAAS,EAAE,CAAC,MAAD,EAAS,MAAT;AADN,GAHiB;AAOxB,EAAA,QAAQ,EAAE;AACR,IAAA,iBAAiB,GAAA;AACf,aAAO,KAAK,SAAZ;AACD,KAHO;;AAIR,IAAA,gBAAgB,GAAA;AACd,YAAM,SAAS,GAAG,KAAK,iBAAvB;AAEA,UAAI,SAAS,IAAI,IAAjB,EAAuB,OAAO,EAAP;AACvB,UAAI,KAAK,CAAC,QAAQ,CAAC,SAAD,CAAT,CAAT,EAAgC,OAAO,EAAP;AAChC,aAAO;AAAE,SAAC,aAAa,KAAK,SAAS,EAA5B,GAAiC;AAAnC,OAAP;AACD;;AAVO;AAPc,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'elevatable',\n\n  props: {\n    elevation: [Number, String],\n  },\n\n  computed: {\n    computedElevation (): string | number | undefined {\n      return this.elevation\n    },\n    elevationClasses (): Record<string, boolean> {\n      const elevation = this.computedElevation\n\n      if (elevation == null) return {}\n      if (isNaN(parseInt(elevation))) return {}\n      return { [`elevation-${this.elevation}`]: true }\n    },\n  },\n})\n"],"sourceRoot":"","file":"index.js"}