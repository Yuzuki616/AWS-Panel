{"version":3,"sources":["../../src/util/component.ts"],"names":[],"mappings":";;;;;;;AAkBc,SAAU,SAAV,CAAwB,OAAxB,EAAkC;AAC9C,SAAO,OAAP;AACD","sourcesContent":["/* eslint-disable max-len, import/export */\nimport {\n  ComponentOptions,\n  RecordPropsDefinition,\n  ThisTypedComponentOptionsWithArrayProps,\n  ThisTypedComponentOptionsWithRecordProps,\n} from 'vue/types/options'\nimport { Vue } from 'vue/types/vue'\nimport { FunctionalComponentOptions } from 'vue'\n\ntype V = Vue\n\n// Maybe don't actually use this, it doesn't work very well\nexport default function component<Data, Methods, Computed, PropNames extends string = never> (options?: ThisTypedComponentOptionsWithArrayProps<V, Data, Methods, Computed, PropNames>): ThisTypedComponentOptionsWithArrayProps<V, Data, Methods, Computed, PropNames>\nexport default function component<Data, Methods, Computed, Props> (options?: ThisTypedComponentOptionsWithRecordProps<V, Data, Methods, Computed, Props>): ThisTypedComponentOptionsWithRecordProps<V, Data, Methods, Computed, Props>\nexport default function component<PropNames extends string = never> (definition: FunctionalComponentOptions<Record<PropNames, any>, PropNames[]>): FunctionalComponentOptions<Record<PropNames, any>, PropNames[]>\nexport default function component<Props> (definition: FunctionalComponentOptions<Props, RecordPropsDefinition<Props>>): FunctionalComponentOptions<Props, RecordPropsDefinition<Props>>\nexport default function component (options?: ComponentOptions<V>): ComponentOptions<V>\nexport default function component<T> (options: T): T {\n  return options\n}\n"],"sourceRoot":"","file":"component.js"}