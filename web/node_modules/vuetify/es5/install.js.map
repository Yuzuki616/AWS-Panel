{"version":3,"sources":["../src/install.ts"],"names":[],"mappings":";;;;;;;AAAA;;AAEA;;;;AAEM,SAAU,OAAV,CAAmB,GAAnB,EAAoE;AAAA,MAA5B,IAA4B,uEAAF,EAAE;AACxE,MAAK,OAAe,CAAC,SAArB,EAAgC;AAC/B,EAAA,OAAe,CAAC,SAAhB,GAA4B,IAA5B;;AAED,MAAI,iBAAW,GAAf,EAAoB;AAClB;AAID;;AAED,MAAM,UAAU,GAAG,IAAI,CAAC,UAAL,IAAmB,EAAtC;AACA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAL,IAAmB,EAAtC;;AAEA,OAAK,IAAM,IAAX,IAAmB,UAAnB,EAA+B;AAC7B,QAAM,SAAS,GAAG,UAAU,CAAC,IAAD,CAA5B;AAEA,IAAA,GAAG,CAAC,SAAJ,CAAc,IAAd,EAAoB,SAApB;AACD;;AAED,GAAC,SAAS,kBAAT,CAA6B,UAA7B,EAA4C;AAC3C,QAAI,UAAJ,EAAgB;AACd,WAAK,IAAM,GAAX,IAAkB,UAAlB,EAA8B;AAC5B,YAAM,SAAS,GAAG,UAAU,CAAC,GAAD,CAA5B;;AACA,YAAI,SAAS,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,uBAAX,CAApC,EAAyE;AACvE,UAAA,GAAG,CAAC,SAAJ,CAAc,GAAd,EAAmB,SAAnB;AACD;AACF;;AACD,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAXD,EAWG,UAXH,EApBwE,CAiCxE;AACA;AACA;;;AACA,MAAI,GAAG,CAAC,mBAAR,EAA6B;AAC7B,EAAA,GAAG,CAAC,mBAAJ,GAA0B,IAA1B;AAEA,EAAA,GAAG,CAAC,KAAJ,CAAU;AACR,IAAA,YADQ,0BACI;AACV,UAAM,OAAO,GAAG,KAAK,QAArB;;AAEA,UAAI,OAAO,CAAC,OAAZ,EAAqB;AACnB,QAAA,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAqB,IAArB,EAA2B,KAAK,WAAhC;AACA,aAAK,QAAL,GAAgB,GAAG,CAAC,UAAJ,CAAe,OAAO,CAAC,OAAR,CAAgB,SAA/B,CAAhB;AACD,OAHD,MAGO;AACL,aAAK,QAAL,GAAiB,OAAO,CAAC,MAAR,IAAkB,OAAO,CAAC,MAAR,CAAe,QAAlC,IAA+C,IAA/D;AACD;AACF,KAVO;AAWR,IAAA,WAXQ,yBAWG;AACT;AACA,UAAI,KAAK,QAAL,CAAc,OAAd,IAAyB,KAAK,GAA9B,IAAqC,KAAK,GAAL,CAAS,YAAT,CAAsB,sBAAtB,CAAzC,EAAwF;AACtF;AACA,aAAK,QAAL,CAAc,WAAd,GAA4B,IAA5B,CAFsF,CAGtF;;AACA,aAAK,QAAL,CAAc,UAAd,CAAyB,MAAzB,CAAgC,IAAhC;AACD;AACF,KAnBO;AAoBR,IAAA,OApBQ,qBAoBD;AACL;AACA,UAAI,KAAK,QAAL,CAAc,OAAd,IAAyB,KAAK,QAAL,CAAc,WAA3C,EAAwD;AACtD;AACA,aAAK,QAAL,CAAc,WAAd,GAA4B,KAA5B,CAFsD,CAGtD;;AACA,aAAK,QAAL,CAAc,UAAd,CAAyB,MAAzB;AACD;AACF;AA5BO,GAAV;AA8BD","sourcesContent":["import OurVue, { VueConstructor } from 'vue'\nimport { VuetifyUseOptions } from 'vuetify/types'\nimport { consoleError } from './util/console'\n\nexport function install (Vue: VueConstructor, args: VuetifyUseOptions = {}) {\n  if ((install as any).installed) return\n  (install as any).installed = true\n\n  if (OurVue !== Vue) {\n    consoleError(`Multiple instances of Vue detected\nSee https://github.com/vuetifyjs/vuetify/issues/4068\n\nIf you're seeing \"$attrs is readonly\", it's caused by this`)\n  }\n\n  const components = args.components || {}\n  const directives = args.directives || {}\n\n  for (const name in directives) {\n    const directive = directives[name]\n\n    Vue.directive(name, directive)\n  }\n\n  (function registerComponents (components: any) {\n    if (components) {\n      for (const key in components) {\n        const component = components[key]\n        if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n          Vue.component(key, component as typeof Vue)\n        }\n      }\n      return true\n    }\n    return false\n  })(components)\n\n  // Used to avoid multiple mixins being setup\n  // when in dev mode and hot module reload\n  // https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\n  if (Vue.$_vuetify_installed) return\n  Vue.$_vuetify_installed = true\n\n  Vue.mixin({\n    beforeCreate () {\n      const options = this.$options as any\n\n      if (options.vuetify) {\n        options.vuetify.init(this, this.$ssrContext)\n        this.$vuetify = Vue.observable(options.vuetify.framework)\n      } else {\n        this.$vuetify = (options.parent && options.parent.$vuetify) || this\n      }\n    },\n    beforeMount () {\n      // @ts-ignore\n      if (this.$options.vuetify && this.$el && this.$el.hasAttribute('data-server-rendered')) {\n        // @ts-ignore\n        this.$vuetify.isHydrating = true\n        // @ts-ignore\n        this.$vuetify.breakpoint.update(true)\n      }\n    },\n    mounted () {\n      // @ts-ignore\n      if (this.$options.vuetify && this.$vuetify.isHydrating) {\n        // @ts-ignore\n        this.$vuetify.isHydrating = false\n        // @ts-ignore\n        this.$vuetify.breakpoint.update()\n      }\n    },\n  })\n}\n"],"sourceRoot":"","file":"install.js"}