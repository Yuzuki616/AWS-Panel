{"version":3,"sources":["../src/framework.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;AAcA;;;;;;;;;;;;IAEqB,O;AAqBnB,qBAA+C;AAAA,QAAlC,UAAkC,uEAAF,EAAE;;AAAA;;AAVxC,SAAA,SAAA,GAAgD;AACrD,MAAA,WAAW,EAAE;AADwC,KAAhD;AAIA,SAAA,SAAA,GAAsB,EAAtB;AAEA,SAAA,MAAA,GAAS,EAAT;AAEA,SAAA,UAAA,GAAgC,EAAhC;AAGL,SAAK,UAAL,GAAkB,UAAlB;AAEA,SAAK,GAAL,CAAS,QAAQ,CAAC,OAAlB;AACA,SAAK,GAAL,CAAS,QAAQ,CAAC,WAAlB;AACA,SAAK,GAAL,CAAS,QAAQ,CAAC,UAAlB;AACA,SAAK,GAAL,CAAS,QAAQ,CAAC,IAAlB;AACA,SAAK,GAAL,CAAS,QAAQ,CAAC,KAAlB;AACA,SAAK,GAAL,CAAS,QAAQ,CAAC,IAAlB;AACA,SAAK,GAAL,CAAS,QAAQ,CAAC,KAAlB;AACD,G,CAED;AACA;AACA;;;;;WACA,cAAM,IAAN,EAAiB,UAAjB,EAAoC;AAAA;;AAClC,WAAK,SAAL,CAAe,OAAf,CAAuB,UAAA,QAAQ,EAAG;AAChC,YAAM,OAAO,GAAG,KAAI,CAAC,SAAL,CAAe,QAAf,CAAhB;AAEA,QAAA,OAAO,CAAC,SAAR,GAAoB,KAAI,CAAC,SAAzB;AAEA,QAAA,OAAO,CAAC,IAAR,CAAa,IAAb,EAAmB,UAAnB;AACD,OAND,EADkC,CASlC;AACA;AACA;;AACA,WAAK,SAAL,CAAe,GAAf,GAAqB,OAAO,CAAC,KAAK,MAAL,CAAY,GAAb,CAA5B;AACD,K,CAED;;;;WACA,aAAK,OAAL,EAA4B;AAC1B,UAAM,QAAQ,GAAG,OAAO,CAAC,QAAzB;AAEA,UAAI,KAAK,SAAL,CAAe,QAAf,CAAwB,QAAxB,CAAJ,EAAuC,OAHb,CAK1B;;AACA,WAAK,SAAL,CAAe,QAAf,IAA2B,IAAI,OAAJ,CAAY,KAAK,MAAjB,EAAyB,IAAzB,CAA3B;AACA,WAAK,SAAL,CAAe,IAAf,CAAoB,QAApB;AACD;;;;;;;AA3DM,OAAA,CAAA,OAAA,GAAU,gBAAV;AAEA,OAAA,CAAA,SAAA,GAAY,KAAZ;AAEA,OAAA,CAAA,OAAA;AAEA,OAAA,CAAA,MAAA,GAAS;AACd,EAAA,MAAM,EAAE;AADM,CAAT","sourcesContent":["import { install } from './install'\n\n// Types\nimport Vue from 'vue'\nimport {\n  UserVuetifyPreset,\n  VuetifyPreset,\n} from 'vuetify/types/services/presets'\nimport {\n  VuetifyService,\n  VuetifyServiceContract,\n} from 'vuetify/types/services'\n\n// Services\nimport * as services from './services'\n\nexport default class Vuetify {\n  static install = install\n\n  static installed = false\n\n  static version = __VUETIFY_VERSION__\n\n  static config = {\n    silent: false,\n  }\n\n  public framework: Dictionary<VuetifyServiceContract> = {\n    isHydrating: false,\n  } as any\n\n  public installed: string[] = []\n\n  public preset = {} as VuetifyPreset\n\n  public userPreset: UserVuetifyPreset = {}\n\n  constructor (userPreset: UserVuetifyPreset = {}) {\n    this.userPreset = userPreset\n\n    this.use(services.Presets)\n    this.use(services.Application)\n    this.use(services.Breakpoint)\n    this.use(services.Goto)\n    this.use(services.Icons)\n    this.use(services.Lang)\n    this.use(services.Theme)\n  }\n\n  // Called on the new vuetify instance\n  // bootstrap in install beforeCreate\n  // Exposes ssrContext if available\n  init (root: Vue, ssrContext?: object) {\n    this.installed.forEach(property => {\n      const service = this.framework[property]\n\n      service.framework = this.framework\n\n      service.init(root, ssrContext)\n    })\n\n    // rtl is not installed and\n    // will never be called by\n    // the init process\n    this.framework.rtl = Boolean(this.preset.rtl) as any\n  }\n\n  // Instantiate a VuetifyService\n  use (Service: VuetifyService) {\n    const property = Service.property\n\n    if (this.installed.includes(property)) return\n\n    // TODO maybe a specific type for arg 2?\n    this.framework[property] = new Service(this.preset, this as any)\n    this.installed.push(property)\n  }\n}\n"],"sourceRoot":"","file":"framework.js"}