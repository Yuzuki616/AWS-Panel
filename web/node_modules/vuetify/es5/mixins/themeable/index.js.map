{"version":3,"sources":["../../../src/mixins/themeable/index.ts"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;AASA;AACA,IAAM,SAAS,GAAG,aAAI,MAAJ,GAAsB,MAAtB,CAA6B;AAC7C,EAAA,IAAI,EAAE,WADuC;AAG7C,EAAA,OAH6C,qBAGtC;AACL,WAAO;AACL,MAAA,KAAK,EAAE,KAAK;AADP,KAAP;AAGD,GAP4C;AAS7C,EAAA,MAAM,EAAE;AACN,IAAA,KAAK,EAAE;AACL,MAAA,OAAO,EAAE;AACP,QAAA,MAAM,EAAE;AADD;AADJ;AADD,GATqC;AAiB7C,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,OADF;AAEJ,MAAA,OAAO,EAAE;AAFL,KADD;AAKL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,OADD;AAEL,MAAA,OAAO,EAAE;AAFJ;AALF,GAjBsC;AA4B7C,EAAA,IA5B6C,kBA4BzC;AACF,WAAO;AACL,MAAA,gBAAgB,EAAE;AAChB,QAAA,MAAM,EAAE;AADQ;AADb,KAAP;AAKD,GAlC4C;AAoC7C,EAAA,QAAQ,EAAE;AACR,IAAA,SADQ,uBACC;AACP,aAAO,KAAK,QAAL,CAAc,KAAd,CAAoB,IAApB,IAA4B,KAAnC;AACD,KAHO;AAIR,IAAA,MAJQ,oBAIF;AACJ,UAAI,KAAK,IAAL,KAAc,IAAlB,EAAwB;AACtB;AACA,eAAO,IAAP;AACD,OAHD,MAGO,IAAI,KAAK,KAAL,KAAe,IAAnB,EAAyB;AAC9B;AACA,eAAO,KAAP;AACD,OAHM,MAGA;AACL;AACA,eAAO,KAAK,KAAL,CAAW,MAAlB;AACD;AACF,KAfO;AAgBR,IAAA,YAhBQ,0BAgBI;AACV,aAAO;AACL,uBAAe,KAAK,MADf;AAEL,wBAAgB,CAAC,KAAK;AAFjB,OAAP;AAID,KArBO;;AAsBR;AACA,IAAA,UAvBQ,wBAuBE;AACR,UAAI,KAAK,IAAL,KAAc,IAAlB,EAAwB;AACtB;AACA,eAAO,IAAP;AACD,OAHD,MAGO,IAAI,KAAK,KAAL,KAAe,IAAnB,EAAyB;AAC9B;AACA,eAAO,KAAP;AACD,OAHM,MAGA;AACL;AACA,eAAO,KAAK,SAAZ;AACD;AACF,KAlCO;AAmCR,IAAA,gBAnCQ,8BAmCQ;AACd,aAAO;AACL,uBAAe,KAAK,UADf;AAEL,wBAAgB,CAAC,KAAK;AAFjB,OAAP;AAID;AAxCO,GApCmC;AA+E7C,EAAA,KAAK,EAAE;AACL,IAAA,MAAM,EAAE;AACN,MAAA,OADM,mBACG,MADH,EACW,MADX,EACiB;AACrB,YAAI,MAAM,KAAK,MAAf,EAAuB;AACrB,eAAK,gBAAL,CAAsB,MAAtB,GAA+B,KAAK,MAApC;AACD;AACF,OALK;AAMN,MAAA,SAAS,EAAE;AANL;AADH;AA/EsC,CAA7B,CAAlB;;eA2Fe,S;;;AAET,SAAU,sBAAV,CAAkC,OAAlC,EAAwD;AAC5D,MAAM,EAAE,mCACH,OAAO,CAAC,KADL,GAEH,OAAO,CAAC,UAFL,CAAR;;AAIA,MAAM,MAAM,GAAG,SAAS,CAAC,OAAV,CAAkB,QAAlB,CAA2B,MAA3B,CAAkC,IAAlC,CAAuC,EAAvC,CAAf;AACA,SAAO,SAAS,CAAC,OAAV,CAAkB,QAAlB,CAA2B,YAA3B,CAAwC,IAAxC,CAA6C;AAAE,IAAA,MAAM,EAAN;AAAF,GAA7C,CAAP;AACD","sourcesContent":["import Vue from 'vue'\nimport { PropType, RenderContext } from 'vue/types/options'\n\ninterface options extends Vue {\n  theme: {\n    isDark: boolean\n  }\n}\n\n/* @vue/component */\nconst Themeable = Vue.extend<options>().extend({\n  name: 'themeable',\n\n  provide (): object {\n    return {\n      theme: this.themeableProvide,\n    }\n  },\n\n  inject: {\n    theme: {\n      default: {\n        isDark: false,\n      },\n    },\n  },\n\n  props: {\n    dark: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n    light: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n  },\n\n  data () {\n    return {\n      themeableProvide: {\n        isDark: false,\n      },\n    }\n  },\n\n  computed: {\n    appIsDark (): boolean {\n      return this.$vuetify.theme.dark || false\n    },\n    isDark (): boolean {\n      if (this.dark === true) {\n        // explicitly dark\n        return true\n      } else if (this.light === true) {\n        // explicitly light\n        return false\n      } else {\n        // inherit from parent, or default false if there is none\n        return this.theme.isDark\n      }\n    },\n    themeClasses (): object {\n      return {\n        'theme--dark': this.isDark,\n        'theme--light': !this.isDark,\n      }\n    },\n    /** Used by menus and dialogs, inherits from v-app instead of the parent */\n    rootIsDark (): boolean {\n      if (this.dark === true) {\n        // explicitly dark\n        return true\n      } else if (this.light === true) {\n        // explicitly light\n        return false\n      } else {\n        // inherit from v-app\n        return this.appIsDark\n      }\n    },\n    rootThemeClasses (): Dictionary<boolean> {\n      return {\n        'theme--dark': this.rootIsDark,\n        'theme--light': !this.rootIsDark,\n      }\n    },\n  },\n\n  watch: {\n    isDark: {\n      handler (newVal, oldVal) {\n        if (newVal !== oldVal) {\n          this.themeableProvide.isDark = this.isDark\n        }\n      },\n      immediate: true,\n    },\n  },\n})\n\nexport default Themeable\n\nexport function functionalThemeClasses (context: RenderContext): object {\n  const vm = {\n    ...context.props,\n    ...context.injections,\n  }\n  const isDark = Themeable.options.computed.isDark.call(vm)\n  return Themeable.options.computed.themeClasses.call({ isDark })\n}\n"],"sourceRoot":"","file":"index.js"}