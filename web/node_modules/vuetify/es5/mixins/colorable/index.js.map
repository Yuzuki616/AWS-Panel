{"version":3,"sources":["../../../src/mixins/colorable/index.ts"],"names":[],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;eAEe,aAAI,MAAJ,CAAW;AACxB,EAAA,IAAI,EAAE,WADkB;AAGxB,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE;AADF,GAHiB;AAOxB,EAAA,OAAO,EAAE;AACP,IAAA,kBADO,8BACa,KADb,EACyD;AAAA,UAApB,IAAoB,uEAAF,EAAE;;AAC9D,UAAI,OAAO,IAAI,CAAC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACA,mCAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAGlC;;AACA,eAAO,IAAP;AACD;;AACD,UAAI,OAAO,IAAI,CAAC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACA,mCAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAGlC;;AACA,eAAO,IAAP;AACD;;AACD,UAAI,4BAAW,KAAX,CAAJ,EAAuB;AACrB,QAAA,IAAI,CAAC,KAAL,mCACK,IAAI,CAAC,KADV;AAEE,wCAAuB,KAAvB,CAFF;AAGE,oCAAmB,KAAnB;AAHF;AAKD,OAND,MAMO,IAAI,KAAJ,EAAW;AAChB,QAAA,IAAI,CAAC,KAAL,mCACK,IAAI,CAAC,KADV,2BAEG,KAFH,EAEW,IAFX;AAID;;AAED,aAAO,IAAP;AACD,KA5BM;AA8BP,IAAA,YA9BO,wBA8BO,KA9BP,EA8BmD;AAAA,UAApB,IAAoB,uEAAF,EAAE;;AACxD,UAAI,OAAO,IAAI,CAAC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACA,mCAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAGlC;;AACA,eAAO,IAAP;AACD;;AACD,UAAI,OAAO,IAAI,CAAC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACA,mCAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAGlC;;AACA,eAAO,IAAP;AACD;;AACD,UAAI,4BAAW,KAAX,CAAJ,EAAuB;AACrB,QAAA,IAAI,CAAC,KAAL,mCACK,IAAI,CAAC,KADV;AAEE,UAAA,KAAK,YAAK,KAAL,CAFP;AAGE,mCAAkB,KAAlB;AAHF;AAKD,OAND,MAMO,IAAI,KAAJ,EAAW;AAAA,oCACmB,KAAK,CAAC,QAAN,GAAiB,IAAjB,GAAwB,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CADnB;AAAA;AAAA,YACT,SADS;AAAA,YACE,aADF;;AAEhB,QAAA,IAAI,CAAC,KAAL,mCACK,IAAI,CAAC,KADV,2BAEG,SAAS,GAAG,QAFf,EAE0B,IAF1B;;AAIA,YAAI,aAAJ,EAAmB;AACjB,UAAA,IAAI,CAAC,KAAL,CAAW,WAAW,aAAtB,IAAuC,IAAvC;AACD;AACF;;AACD,aAAO,IAAP;AACD;AA5DM;AAPe,CAAX,C","sourcesContent":["import Vue from 'vue'\nimport { VNodeData } from 'vue/types/vnode'\nimport { consoleError } from '../../util/console'\nimport { isCssColor } from '../../util/colorUtils'\n\nexport default Vue.extend({\n  name: 'colorable',\n\n  props: {\n    color: String,\n  },\n\n  methods: {\n    setBackgroundColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          'background-color': `${color}`,\n          'border-color': `${color}`,\n        }\n      } else if (color) {\n        data.class = {\n          ...data.class,\n          [color]: true,\n        }\n      }\n\n      return data\n    },\n\n    setTextColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          color: `${color}`,\n          'caret-color': `${color}`,\n        }\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2) as (string | undefined)[]\n        data.class = {\n          ...data.class,\n          [colorName + '--text']: true,\n        }\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true\n        }\n      }\n      return data\n    },\n  },\n})\n"],"sourceRoot":"","file":"index.js"}