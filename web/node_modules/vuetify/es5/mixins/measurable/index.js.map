{"version":3,"sources":["../../../src/mixins/measurable/index.ts"],"names":[],"mappings":";;;;;;;AACA;;AAGA;;;;AAJA;AAGA;eAKe,aAAI,MAAJ,CAAW;AACxB,EAAA,IAAI,EAAE,YADkB;AAGxB,EAAA,KAAK,EAAE;AACL,IAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CADH;AAEL,IAAA,SAAS,EAAE,CAAC,MAAD,EAAS,MAAT,CAFN;AAGL,IAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,CAHL;AAIL,IAAA,SAAS,EAAE,CAAC,MAAD,EAAS,MAAT,CAJN;AAKL,IAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,CALL;AAML,IAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT;AANF,GAHiB;AAYxB,EAAA,QAAQ,EAAE;AACR,IAAA,gBADQ,8BACQ;AACd,UAAM,MAAM,GAA2B,EAAvC;AAEA,UAAM,MAAM,GAAG,4BAAc,KAAK,MAAnB,CAAf;AACA,UAAM,SAAS,GAAG,4BAAc,KAAK,SAAnB,CAAlB;AACA,UAAM,QAAQ,GAAG,4BAAc,KAAK,QAAnB,CAAjB;AACA,UAAM,SAAS,GAAG,4BAAc,KAAK,SAAnB,CAAlB;AACA,UAAM,QAAQ,GAAG,4BAAc,KAAK,QAAnB,CAAjB;AACA,UAAM,KAAK,GAAG,4BAAc,KAAK,KAAnB,CAAd;AAEA,UAAI,MAAJ,EAAY,MAAM,CAAC,MAAP,GAAgB,MAAhB;AACZ,UAAI,SAAJ,EAAe,MAAM,CAAC,SAAP,GAAmB,SAAnB;AACf,UAAI,QAAJ,EAAc,MAAM,CAAC,QAAP,GAAkB,QAAlB;AACd,UAAI,SAAJ,EAAe,MAAM,CAAC,SAAP,GAAmB,SAAnB;AACf,UAAI,QAAJ,EAAc,MAAM,CAAC,QAAP,GAAkB,QAAlB;AACd,UAAI,KAAJ,EAAW,MAAM,CAAC,KAAP,GAAe,KAAf;AAEX,aAAO,MAAP;AACD;AAnBO;AAZc,CAAX,C","sourcesContent":["// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport Vue, { PropType } from 'vue'\n\nexport type NumberOrNumberString = PropType<string | number | undefined>\n\nexport default Vue.extend({\n  name: 'measurable',\n\n  props: {\n    height: [Number, String] as NumberOrNumberString,\n    maxHeight: [Number, String] as NumberOrNumberString,\n    maxWidth: [Number, String] as NumberOrNumberString,\n    minHeight: [Number, String] as NumberOrNumberString,\n    minWidth: [Number, String] as NumberOrNumberString,\n    width: [Number, String] as NumberOrNumberString,\n  },\n\n  computed: {\n    measurableStyles (): object {\n      const styles: Record<string, string> = {}\n\n      const height = convertToUnit(this.height)\n      const minHeight = convertToUnit(this.minHeight)\n      const minWidth = convertToUnit(this.minWidth)\n      const maxHeight = convertToUnit(this.maxHeight)\n      const maxWidth = convertToUnit(this.maxWidth)\n      const width = convertToUnit(this.width)\n\n      if (height) styles.height = height\n      if (minHeight) styles.minHeight = minHeight\n      if (minWidth) styles.minWidth = minWidth\n      if (maxHeight) styles.maxHeight = maxHeight\n      if (maxWidth) styles.maxWidth = maxWidth\n      if (width) styles.width = width\n\n      return styles\n    },\n  },\n})\n"],"sourceRoot":"","file":"index.js"}