{"version":3,"sources":["../../../src/mixins/binds-attrs/index.ts"],"names":[],"mappings":";;;;;;;AAAA;;;;AAEA;;;AAGG;AAEH,SAAS,WAAT,CAAsB,QAAtB,EAAsC;AACpC,SAAO,UAAqB,GAArB,EAA0B,MAA1B,EAAgC;AACrC,SAAK,IAAM,IAAX,IAAmB,MAAnB,EAA2B;AACzB,UAAI,CAAC,MAAM,CAAC,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,IAA1C,CAAL,EAAsD;AACpD,aAAK,OAAL,CAAa,KAAK,KAAL,CAAW,QAAX,CAAb,EAAmC,IAAnC;AACD;AACF;;AACD,SAAK,IAAM,KAAX,IAAmB,GAAnB,EAAwB;AACtB,WAAK,IAAL,CAAU,KAAK,KAAL,CAAW,QAAX,CAAV,EAAgC,KAAhC,EAAsC,GAAG,CAAC,KAAD,CAAzC;AACD;AACF,GATD;AAUD;;eAEc,aAAI,MAAJ,CAAW;AACxB,EAAA,IAAI,EAAE;AAAA,WAAO;AACX,MAAA,MAAM,EAAE,EADG;AAEX,MAAA,UAAU,EAAE;AAFD,KAAP;AAAA,GADkB;AAMxB,EAAA,OANwB,qBAMjB;AACL;AACA;AACA,SAAK,MAAL,CAAY,QAAZ,EAAsB,WAAW,CAAC,QAAD,CAAjC,EAA6C;AAAE,MAAA,SAAS,EAAE;AAAb,KAA7C;AACA,SAAK,MAAL,CAAY,YAAZ,EAA0B,WAAW,CAAC,YAAD,CAArC,EAAqD;AAAE,MAAA,SAAS,EAAE;AAAb,KAArD;AACD;AAXuB,CAAX,C","sourcesContent":["import Vue, { WatchHandler } from 'vue'\n\n/**\n * This mixin provides `attrs$` and `listeners$` to work around\n * vue bug https://github.com/vuejs/vue/issues/10115\n */\n\nfunction makeWatcher (property: string): ThisType<Vue> & WatchHandler<any> {\n  return function (this: Vue, val, oldVal) {\n    for (const attr in oldVal) {\n      if (!Object.prototype.hasOwnProperty.call(val, attr)) {\n        this.$delete(this.$data[property], attr)\n      }\n    }\n    for (const attr in val) {\n      this.$set(this.$data[property], attr, val[attr])\n    }\n  }\n}\n\nexport default Vue.extend({\n  data: () => ({\n    attrs$: {} as Dictionary<string>,\n    listeners$: {} as Dictionary<Function | Function[]>,\n  }),\n\n  created () {\n    // Work around unwanted re-renders: https://github.com/vuejs/vue/issues/10115\n    // Make sure to use `attrs$` instead of `$attrs` (confusing right?)\n    this.$watch('$attrs', makeWatcher('attrs$'), { immediate: true })\n    this.$watch('$listeners', makeWatcher('listeners$'), { immediate: true })\n  },\n})\n"],"sourceRoot":"","file":"index.js"}