{"version":3,"sources":["../../../src/components/VCheckbox/VSimpleCheckbox.ts"],"names":[],"mappings":"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","sourcesContent":["import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n"],"sourceRoot":"","file":"VSimpleCheckbox.js"}