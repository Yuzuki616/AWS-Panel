{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts"],"names":[],"mappings":"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","sourcesContent":["// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n"],"sourceRoot":"","file":"VExpansionPanelHeader.js"}