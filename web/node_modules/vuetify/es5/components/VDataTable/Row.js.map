{"version":3,"sources":["../../../src/components/VDataTable/Row.ts"],"names":[],"mappings":";;;;;;;AACA;;AAIA;;;;;;;;;;;;;;;;AAEA,SAAS,OAAT,CAAkB,IAAlB,EAA2C;AAAA;;AACzC,SAAO,IAAK,CAAC,MAAN,KAAiB,CAAjB,IACL,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,QAAb,WAAsB,IAAK,CAAC,CAAD,CAA3B,qBAAsB,OAAU,GAAhC,CADH;AAED;;eAEc,aAAI,MAAJ,CAAW;AACxB,EAAA,IAAI,EAAE,KADkB;AAGxB,EAAA,UAAU,EAAE,IAHY;AAKxB,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE,KADJ;AAEL,IAAA,KAAK,EAAE,MAFF;AAGL,IAAA,IAAI,EAAE,MAHD;AAIL,IAAA,GAAG,EAAE;AAJA,GALiB;AAYxB,EAAA,MAZwB,kBAYhB,CAZgB,QAYS;AAAA,QAApB,KAAoB,QAApB,KAAoB;AAAA,QAAb,KAAa,QAAb,KAAa;AAAA,QAAN,IAAM,QAAN,IAAM;AAC/B,QAAM,aAAa,GAAG,KAAK,EAA3B;AAEA,QAAM,OAAO,GAAG,KAAK,CAAC,OAAN,CAAc,GAAd,CAAkB,UAAC,MAAD,EAA4B;AAC5D,UAAM,QAAQ,GAAG,EAAjB;AACA,UAAM,KAAK,GAAG,mCAAqB,KAAK,CAAC,IAA3B,EAAiC,MAAM,CAAC,KAAxC,CAAd;AAEA,UAAM,QAAQ,GAAG,MAAM,CAAC,KAAxB;AACA,UAAM,UAAU,GAAG,IAAI,CAAC,WAAL,IAAoB,IAAI,CAAC,WAAL,CAAiB,cAAjB,CAAgC,QAAhC,CAApB,IAAiE,IAAI,CAAC,WAAL,CAAiB,QAAjB,CAApF;AACA,UAAM,WAAW,GAAG,aAAa,CAAC,cAAd,CAA6B,QAA7B,KAA0C,aAAa,CAAC,QAAD,CAA3E;;AAEA,UAAI,UAAJ,EAAgB;AACd,QAAA,QAAQ,CAAC,IAAT,OAAA,QAAQ,qBAAS,0BAAY,UAAU,CAAC;AACtC,UAAA,IAAI,EAAE,KAAK,CAAC,IAD0B;AAEtC,UAAA,QAAQ,EAAE,KAF4B;AAGtC,UAAA,MAAM,EAAN,MAHsC;AAItC,UAAA,KAAK,EAAE,KAAK,CAAC,KAJyB;AAKtC,UAAA,KAAK,EAAL;AALsC,SAAD,CAAtB,CAAT,EAAR;AAOD,OARD,MAQO,IAAI,WAAJ,EAAiB;AACtB,QAAA,QAAQ,CAAC,IAAT,OAAA,QAAQ,qBAAS,0BAAY,WAAZ,CAAT,EAAR;AACD,OAFM,MAEA;AACL,QAAA,QAAQ,CAAC,IAAT,CAAc,KAAK,IAAI,IAAT,GAAgB,KAAhB,GAAwB,MAAM,CAAC,KAAD,CAA5C;AACD;;AAED,UAAM,SAAS,kBAAW,MAAM,CAAC,KAAP,IAAgB,OAA3B,CAAf;AAEA,aAAO,OAAO,CAAC,QAAD,CAAP,GACH,CAAC,CAAC,IAAD,EAAO;AACR,QAAA,KAAK,EAAE,CACL,SADK,EAEL,MAAM,CAAC,SAFF,EAGL;AACE,mCAAyB,MAAM,CAAC;AADlC,SAHK;AADC,OAAP,EAQA,QARA,CADE,GAUH,QAVJ;AAWD,KAnCe,CAAhB;AAqCA,WAAO,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,OAAb,CAAR;AACD;AArDuB,CAAX,C","sourcesContent":["// Types\nimport Vue, { VNode, PropType } from 'vue'\nimport { DataTableHeader } from 'vuetify/types'\n\n// Utils\nimport { getObjectValueByPath, wrapInArray } from '../../util/helpers'\n\nfunction needsTd (slot: VNode[] | undefined) {\n  return slot!.length !== 1 ||\n    !['td', 'th'].includes(slot![0]?.tag!)\n}\n\nexport default Vue.extend({\n  name: 'row',\n\n  functional: true,\n\n  props: {\n    headers: Array as PropType<DataTableHeader[]>,\n    index: Number,\n    item: Object,\n    rtl: Boolean,\n  },\n\n  render (h, { props, slots, data }): VNode {\n    const computedSlots = slots()\n\n    const columns = props.headers.map((header: DataTableHeader) => {\n      const children = []\n      const value = getObjectValueByPath(props.item, header.value)\n\n      const slotName = header.value\n      const scopedSlot = data.scopedSlots && data.scopedSlots.hasOwnProperty(slotName) && data.scopedSlots[slotName]\n      const regularSlot = computedSlots.hasOwnProperty(slotName) && computedSlots[slotName]\n\n      if (scopedSlot) {\n        children.push(...wrapInArray(scopedSlot({\n          item: props.item,\n          isMobile: false,\n          header,\n          index: props.index,\n          value,\n        })))\n      } else if (regularSlot) {\n        children.push(...wrapInArray(regularSlot))\n      } else {\n        children.push(value == null ? value : String(value))\n      }\n\n      const textAlign = `text-${header.align || 'start'}`\n\n      return needsTd(children)\n        ? h('td', {\n          class: [\n            textAlign,\n            header.cellClass,\n            {\n              'v-data-table__divider': header.divider,\n            },\n          ],\n        }, children)\n        : children\n    })\n\n    return h('tr', data, columns)\n  },\n})\n"],"sourceRoot":"","file":"Row.js"}