{"version":3,"sources":["../../../../src/components/VCalendar/mixins/calendar-with-intervals.ts"],"names":[],"mappings":"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","sourcesContent":["\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Util\nimport props from '../util/props'\nimport {\n  parseTime,\n  copyTimestamp,\n  updateMinutes,\n  createDayList,\n  createIntervalList,\n  createNativeLocaleFormatter,\n  VTime,\n  MINUTES_IN_DAY,\n} from '../util/timestamp'\nimport { CalendarTimestamp, CalendarFormatter, CalendarDayBodySlotScope } from 'vuetify/types'\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-intervals',\n\n  props: props.intervals,\n\n  computed: {\n    parsedFirstInterval (): number {\n      return parseInt(this.firstInterval)\n    },\n    parsedIntervalMinutes (): number {\n      return parseInt(this.intervalMinutes)\n    },\n    parsedIntervalCount (): number {\n      return parseInt(this.intervalCount)\n    },\n    parsedIntervalHeight (): number {\n      return parseFloat(this.intervalHeight)\n    },\n    parsedFirstTime (): number | false {\n      return parseTime(this.firstTime)\n    },\n    firstMinute (): number {\n      const time = this.parsedFirstTime\n\n      return time !== false && time >= 0 && time <= MINUTES_IN_DAY\n        ? time\n        : this.parsedFirstInterval * this.parsedIntervalMinutes\n    },\n    bodyHeight (): number {\n      return this.parsedIntervalCount * this.parsedIntervalHeight\n    },\n    days (): CalendarTimestamp[] {\n      return createDayList(\n        this.parsedStart,\n        this.parsedEnd,\n        this.times.today,\n        this.weekdaySkips,\n        this.maxDays\n      )\n    },\n    intervals (): CalendarTimestamp[][] {\n      const days: CalendarTimestamp[] = this.days\n      const first: number = this.firstMinute\n      const minutes: number = this.parsedIntervalMinutes\n      const count: number = this.parsedIntervalCount\n      const now: CalendarTimestamp = this.times.now\n\n      return days.map(d => createIntervalList(d, first, minutes, count, now))\n    },\n    intervalFormatter (): CalendarFormatter {\n      if (this.intervalFormat) {\n        return this.intervalFormat as CalendarFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', hour: '2-digit', minute: '2-digit' }\n      const shortOptions = { timeZone: 'UTC', hour: 'numeric', minute: '2-digit' }\n      const shortHourOptions = { timeZone: 'UTC', hour: 'numeric' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (tms, short) => short ? (tms.minute === 0 ? shortHourOptions : shortOptions) : longOptions\n      )\n    },\n  },\n\n  methods: {\n    showIntervalLabelDefault (interval: CalendarTimestamp): boolean {\n      const first: CalendarTimestamp = this.intervals[0][0]\n      const isFirst: boolean = first.hour === interval.hour && first.minute === interval.minute\n      return !isFirst\n    },\n    intervalStyleDefault (_interval: CalendarTimestamp): object | undefined {\n      return undefined\n    },\n    getTimestampAtEvent (e: MouseEvent | TouchEvent, day: CalendarTimestamp): CalendarTimestamp {\n      const timestamp: CalendarTimestamp = copyTimestamp(day)\n      const bounds = (e.currentTarget as HTMLElement).getBoundingClientRect()\n      const baseMinutes: number = this.firstMinute\n      const touchEvent: TouchEvent = e as TouchEvent\n      const mouseEvent: MouseEvent = e as MouseEvent\n      const touches: TouchList = touchEvent.changedTouches || touchEvent.touches\n      const clientY: number = touches && touches[0] ? touches[0].clientY : mouseEvent.clientY\n      const addIntervals: number = (clientY - bounds.top) / this.parsedIntervalHeight\n      const addMinutes: number = Math.floor(addIntervals * this.parsedIntervalMinutes)\n      const minutes: number = baseMinutes + addMinutes\n\n      return updateMinutes(timestamp, minutes, this.times.now)\n    },\n    getSlotScope (timestamp: CalendarTimestamp): CalendarDayBodySlotScope {\n      const scope = copyTimestamp(timestamp) as any\n      scope.timeToY = this.timeToY\n      scope.timeDelta = this.timeDelta\n      scope.minutesToPixels = this.minutesToPixels\n      scope.week = this.days\n      return scope\n    },\n    scrollToTime (time: VTime): boolean {\n      const y = this.timeToY(time)\n      const pane = this.$refs.scrollArea as HTMLElement\n\n      if (y === false || !pane) {\n        return false\n      }\n\n      pane.scrollTop = y\n\n      return true\n    },\n    minutesToPixels (minutes: number): number {\n      return minutes / this.parsedIntervalMinutes * this.parsedIntervalHeight\n    },\n    timeToY (time: VTime, clamp = true): number | false {\n      let y = this.timeDelta(time)\n\n      if (y !== false) {\n        y *= this.bodyHeight\n\n        if (clamp) {\n          if (y < 0) {\n            y = 0\n          }\n          if (y > this.bodyHeight) {\n            y = this.bodyHeight\n          }\n        }\n      }\n\n      return y\n    },\n    timeDelta (time: VTime): number | false {\n      const minutes = parseTime(time)\n\n      if (minutes === false) {\n        return false\n      }\n\n      const min: number = this.firstMinute\n      const gap: number = this.parsedIntervalCount * this.parsedIntervalMinutes\n\n      return (minutes - min) / gap\n    },\n  },\n})\n"],"sourceRoot":"","file":"calendar-with-intervals.js"}