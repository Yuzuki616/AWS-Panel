{"version":3,"sources":["../../../src/components/VSwitch/VSwitch.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.isDisabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      const { title, ...switchAttrs } = this.attrs$\n\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...switchAttrs,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n"],"sourceRoot":"","file":"VSwitch.js"}