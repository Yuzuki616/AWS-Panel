{"version":3,"sources":["../../../src/components/VSkeletonLoader/VSkeletonLoader.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { getSlot } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\nexport interface HTMLSkeletonLoaderElement extends HTMLElement {\n  _initialStyle?: {\n    display: string | null\n    transition: string\n  }\n}\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object,\n      default: () => ({}),\n    } as PropValidator<Record<string, string>>,\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return !('default' in this.$scopedSlots) || this.loading\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n\n      if (!this.isLoading) children.push(getSlot(this))\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          afterEnter: this.resetStyles,\n          beforeEnter: this.onBeforeEnter,\n          beforeLeave: this.onBeforeLeave,\n          leaveCancelled: this.resetStyles,\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n    onBeforeEnter (el: HTMLSkeletonLoaderElement) {\n      this.resetStyles(el)\n\n      if (!this.isLoading) return\n\n      el._initialStyle = {\n        display: el.style.display,\n        transition: el.style.transition,\n      }\n\n      el.style.setProperty('transition', 'none', 'important')\n    },\n    onBeforeLeave (el: HTMLSkeletonLoaderElement) {\n      el.style.setProperty('display', 'none', 'important')\n    },\n    resetStyles (el: HTMLSkeletonLoaderElement) {\n      if (!el._initialStyle) return\n\n      el.style.display = el._initialStyle.display || ''\n      el.style.transition = el._initialStyle.transition\n\n      delete el._initialStyle\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n"],"sourceRoot":"","file":"VSkeletonLoader.js"}