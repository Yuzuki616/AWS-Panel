{"remainingRequest":"/home/chengege/AWS-Panel-master/web/node_modules/thread-loader/dist/cjs.js!/home/chengege/AWS-Panel-master/web/node_modules/babel-loader/lib/index.js!/home/chengege/AWS-Panel-master/web/node_modules/vuetify/lib/services/theme/utils.js","dependencies":[{"path":"/home/chengege/AWS-Panel-master/web/node_modules/vuetify/lib/services/theme/utils.js","mtime":499162500000},{"path":"/home/chengege/AWS-Panel-master/web/babel.config.js","mtime":1652337639000},{"path":"/home/chengege/AWS-Panel-master/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chengege/AWS-Panel-master/web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chengege/AWS-Panel-master/web/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL2NoZW5nZWdlL0FXUy1QYW5lbC1tYXN0ZXIvd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5LmpzIjsKaW1wb3J0IF90eXBlb2YgZnJvbSAiL2hvbWUvY2hlbmdlZ2UvQVdTLVBhbmVsLW1hc3Rlci93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZi5qcyI7CmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSAiL2hvbWUvY2hlbmdlZ2UvQVdTLVBhbmVsLW1hc3Rlci93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzLmpzIjsKdmFyIF9leGNsdWRlZCA9IFsiYW5jaG9yIl0sCiAgICBfZXhjbHVkZWQyID0gWyJhbmNob3IiXTsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmFuY2hvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgeyBrZXlzIH0gZnJvbSAnLi4vLi4vdXRpbC9oZWxwZXJzJzsKaW1wb3J0IHsgY29sb3JUb0ludCwgaW50VG9IZXgsIGNvbG9yVG9IZXggfSBmcm9tICcuLi8uLi91dGlsL2NvbG9yVXRpbHMnOwppbXBvcnQgKiBhcyBzUkdCIGZyb20gJy4uLy4uL3V0aWwvY29sb3IvdHJhbnNmb3JtU1JHQic7CmltcG9ydCAqIGFzIExBQiBmcm9tICcuLi8uLi91dGlsL2NvbG9yL3RyYW5zZm9ybUNJRUxBQic7CmV4cG9ydCBmdW5jdGlvbiBwYXJzZSh0aGVtZSkgewogIHZhciBpc0l0ZW0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogIHZhciB2YXJpYXRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB0cnVlOwoKICB2YXIgYW5jaG9yID0gdGhlbWUuYW5jaG9yLAogICAgICB2YXJpYW50ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHRoZW1lLCBfZXhjbHVkZWQpOwoKICB2YXIgY29sb3JzID0gT2JqZWN0LmtleXModmFyaWFudCk7CiAgdmFyIHBhcnNlZFRoZW1lID0ge307CgogIGZvciAodmFyIGkgPSAwOyBpIDwgY29sb3JzLmxlbmd0aDsgKytpKSB7CiAgICB2YXIgbmFtZSA9IGNvbG9yc1tpXTsKICAgIHZhciB2YWx1ZSA9IHRoZW1lW25hbWVdOwogICAgaWYgKHZhbHVlID09IG51bGwpIGNvbnRpbnVlOwoKICAgIGlmICghdmFyaWF0aW9ucykgewogICAgICBwYXJzZWRUaGVtZVtuYW1lXSA9IHsKICAgICAgICBiYXNlOiBpbnRUb0hleChjb2xvclRvSW50KHZhbHVlKSkKICAgICAgfTsKICAgIH0gZWxzZSBpZiAoaXNJdGVtKSB7CiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovCiAgICAgIGlmIChuYW1lID09PSAnYmFzZScgfHwgbmFtZS5zdGFydHNXaXRoKCdsaWdodGVuJykgfHwgbmFtZS5zdGFydHNXaXRoKCdkYXJrZW4nKSkgewogICAgICAgIHBhcnNlZFRoZW1lW25hbWVdID0gY29sb3JUb0hleCh2YWx1ZSk7CiAgICAgIH0KICAgIH0gZWxzZSBpZiAoX3R5cGVvZih2YWx1ZSkgPT09ICdvYmplY3QnKSB7CiAgICAgIHBhcnNlZFRoZW1lW25hbWVdID0gcGFyc2UodmFsdWUsIHRydWUsIHZhcmlhdGlvbnMpOwogICAgfSBlbHNlIHsKICAgICAgcGFyc2VkVGhlbWVbbmFtZV0gPSBnZW5WYXJpYXRpb25zKG5hbWUsIGNvbG9yVG9JbnQodmFsdWUpKTsKICAgIH0KICB9CgogIGlmICghaXNJdGVtKSB7CiAgICBwYXJzZWRUaGVtZS5hbmNob3IgPSBhbmNob3IgfHwgcGFyc2VkVGhlbWUuYmFzZSB8fCBwYXJzZWRUaGVtZS5wcmltYXJ5LmJhc2U7CiAgfQoKICByZXR1cm4gcGFyc2VkVGhlbWU7Cn0KLyoqCiAqIEdlbmVyYXRlIHRoZSBDU1MgZm9yIGEgYmFzZSBjb2xvciAoLnByaW1hcnkpCiAqLwoKdmFyIGdlbkJhc2VDb2xvciA9IGZ1bmN0aW9uIGdlbkJhc2VDb2xvcihuYW1lLCB2YWx1ZSkgewogIHJldHVybiAiXG4udi1hcHBsaWNhdGlvbiAuIi5jb25jYXQobmFtZSwgIiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICIpLmNvbmNhdCh2YWx1ZSwgIiAhaW1wb3J0YW50O1xuICBib3JkZXItY29sb3I6ICIpLmNvbmNhdCh2YWx1ZSwgIiAhaW1wb3J0YW50O1xufVxuLnYtYXBwbGljYXRpb24gLiIpLmNvbmNhdChuYW1lLCAiLS10ZXh0IHtcbiAgY29sb3I6ICIpLmNvbmNhdCh2YWx1ZSwgIiAhaW1wb3J0YW50O1xuICBjYXJldC1jb2xvcjogIikuY29uY2F0KHZhbHVlLCAiICFpbXBvcnRhbnQ7XG59Iik7Cn07Ci8qKgogKiBHZW5lcmF0ZSB0aGUgQ1NTIGZvciBhIHZhcmlhbnQgY29sb3IgKC5wcmltYXJ5LmRhcmtlbi0yKQogKi8KCgp2YXIgZ2VuVmFyaWFudENvbG9yID0gZnVuY3Rpb24gZ2VuVmFyaWFudENvbG9yKG5hbWUsIHZhcmlhbnQsIHZhbHVlKSB7CiAgdmFyIF92YXJpYW50JHNwbGl0ID0gdmFyaWFudC5zcGxpdCgvKFxkKS8sIDIpLAogICAgICBfdmFyaWFudCRzcGxpdDIgPSBfc2xpY2VkVG9BcnJheShfdmFyaWFudCRzcGxpdCwgMiksCiAgICAgIHR5cGUgPSBfdmFyaWFudCRzcGxpdDJbMF0sCiAgICAgIG4gPSBfdmFyaWFudCRzcGxpdDJbMV07CgogIHJldHVybiAiXG4udi1hcHBsaWNhdGlvbiAuIi5jb25jYXQobmFtZSwgIi4iKS5jb25jYXQodHlwZSwgIi0iKS5jb25jYXQobiwgIiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICIpLmNvbmNhdCh2YWx1ZSwgIiAhaW1wb3J0YW50O1xuICBib3JkZXItY29sb3I6ICIpLmNvbmNhdCh2YWx1ZSwgIiAhaW1wb3J0YW50O1xufVxuLnYtYXBwbGljYXRpb24gLiIpLmNvbmNhdChuYW1lLCAiLS10ZXh0LnRleHQtLSIpLmNvbmNhdCh0eXBlLCAiLSIpLmNvbmNhdChuLCAiIHtcbiAgY29sb3I6ICIpLmNvbmNhdCh2YWx1ZSwgIiAhaW1wb3J0YW50O1xuICBjYXJldC1jb2xvcjogIikuY29uY2F0KHZhbHVlLCAiICFpbXBvcnRhbnQ7XG59Iik7Cn07Cgp2YXIgZ2VuQ29sb3JWYXJpYWJsZU5hbWUgPSBmdW5jdGlvbiBnZW5Db2xvclZhcmlhYmxlTmFtZShuYW1lKSB7CiAgdmFyIHZhcmlhbnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICdiYXNlJzsKICByZXR1cm4gIi0tdi0iLmNvbmNhdChuYW1lLCAiLSIpLmNvbmNhdCh2YXJpYW50KTsKfTsKCnZhciBnZW5Db2xvclZhcmlhYmxlID0gZnVuY3Rpb24gZ2VuQ29sb3JWYXJpYWJsZShuYW1lKSB7CiAgdmFyIHZhcmlhbnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICdiYXNlJzsKICByZXR1cm4gInZhcigiLmNvbmNhdChnZW5Db2xvclZhcmlhYmxlTmFtZShuYW1lLCB2YXJpYW50KSwgIikiKTsKfTsKCmV4cG9ydCBmdW5jdGlvbiBnZW5TdHlsZXModGhlbWUpIHsKICB2YXIgY3NzVmFyID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTsKCiAgdmFyIGFuY2hvciA9IHRoZW1lLmFuY2hvciwKICAgICAgdmFyaWFudCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyh0aGVtZSwgX2V4Y2x1ZGVkMik7CgogIHZhciBjb2xvcnMgPSBPYmplY3Qua2V5cyh2YXJpYW50KTsKICBpZiAoIWNvbG9ycy5sZW5ndGgpIHJldHVybiAnJzsKICB2YXIgdmFyaWFibGVzQ3NzID0gJyc7CiAgdmFyIGNzcyA9ICcnOwogIHZhciBhQ29sb3IgPSBjc3NWYXIgPyBnZW5Db2xvclZhcmlhYmxlKCdhbmNob3InKSA6IGFuY2hvcjsKICBjc3MgKz0gIi52LWFwcGxpY2F0aW9uIGEgeyBjb2xvcjogIi5jb25jYXQoYUNvbG9yLCAiOyB9Iik7CiAgY3NzVmFyICYmICh2YXJpYWJsZXNDc3MgKz0gIiAgIi5jb25jYXQoZ2VuQ29sb3JWYXJpYWJsZU5hbWUoJ2FuY2hvcicpLCAiOiAiKS5jb25jYXQoYW5jaG9yLCAiO1xuIikpOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbG9ycy5sZW5ndGg7ICsraSkgewogICAgdmFyIG5hbWUgPSBjb2xvcnNbaV07CiAgICB2YXIgdmFsdWUgPSB0aGVtZVtuYW1lXTsKICAgIGNzcyArPSBnZW5CYXNlQ29sb3IobmFtZSwgY3NzVmFyID8gZ2VuQ29sb3JWYXJpYWJsZShuYW1lKSA6IHZhbHVlLmJhc2UpOwogICAgY3NzVmFyICYmICh2YXJpYWJsZXNDc3MgKz0gIiAgIi5jb25jYXQoZ2VuQ29sb3JWYXJpYWJsZU5hbWUobmFtZSksICI6ICIpLmNvbmNhdCh2YWx1ZS5iYXNlLCAiO1xuIikpOwogICAgdmFyIHZhcmlhbnRzID0ga2V5cyh2YWx1ZSk7CgogICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IHZhcmlhbnRzLmxlbmd0aDsgKytfaSkgewogICAgICB2YXIgX3ZhcmlhbnQgPSB2YXJpYW50c1tfaV07CiAgICAgIHZhciB2YXJpYW50VmFsdWUgPSB2YWx1ZVtfdmFyaWFudF07CiAgICAgIGlmIChfdmFyaWFudCA9PT0gJ2Jhc2UnKSBjb250aW51ZTsKICAgICAgY3NzICs9IGdlblZhcmlhbnRDb2xvcihuYW1lLCBfdmFyaWFudCwgY3NzVmFyID8gZ2VuQ29sb3JWYXJpYWJsZShuYW1lLCBfdmFyaWFudCkgOiB2YXJpYW50VmFsdWUpOwogICAgICBjc3NWYXIgJiYgKHZhcmlhYmxlc0NzcyArPSAiICAiLmNvbmNhdChnZW5Db2xvclZhcmlhYmxlTmFtZShuYW1lLCBfdmFyaWFudCksICI6ICIpLmNvbmNhdCh2YXJpYW50VmFsdWUsICI7XG4iKSk7CiAgICB9CiAgfQoKICBpZiAoY3NzVmFyKSB7CiAgICB2YXJpYWJsZXNDc3MgPSAiOnJvb3Qge1xuIi5jb25jYXQodmFyaWFibGVzQ3NzLCAifVxuXG4iKTsKICB9CgogIHJldHVybiB2YXJpYWJsZXNDc3MgKyBjc3M7Cn0KZXhwb3J0IGZ1bmN0aW9uIGdlblZhcmlhdGlvbnMobmFtZSwgdmFsdWUpIHsKICB2YXIgdmFsdWVzID0gewogICAgYmFzZTogaW50VG9IZXgodmFsdWUpCiAgfTsKCiAgZm9yICh2YXIgaSA9IDU7IGkgPiAwOyAtLWkpIHsKICAgIHZhbHVlc1sibGlnaHRlbiIuY29uY2F0KGkpXSA9IGludFRvSGV4KGxpZ2h0ZW4odmFsdWUsIGkpKTsKICB9CgogIGZvciAodmFyIF9pMiA9IDE7IF9pMiA8PSA0OyArK19pMikgewogICAgdmFsdWVzWyJkYXJrZW4iLmNvbmNhdChfaTIpXSA9IGludFRvSGV4KGRhcmtlbih2YWx1ZSwgX2kyKSk7CiAgfQoKICByZXR1cm4gdmFsdWVzOwp9CmV4cG9ydCBmdW5jdGlvbiBsaWdodGVuKHZhbHVlLCBhbW91bnQpIHsKICB2YXIgbGFiID0gTEFCLmZyb21YWVooc1JHQi50b1hZWih2YWx1ZSkpOwogIGxhYlswXSA9IGxhYlswXSArIGFtb3VudCAqIDEwOwogIHJldHVybiBzUkdCLmZyb21YWVooTEFCLnRvWFlaKGxhYikpOwp9CmV4cG9ydCBmdW5jdGlvbiBkYXJrZW4odmFsdWUsIGFtb3VudCkgewogIHZhciBsYWIgPSBMQUIuZnJvbVhZWihzUkdCLnRvWFlaKHZhbHVlKSk7CiAgbGFiWzBdID0gbGFiWzBdIC0gYW1vdW50ICogMTA7CiAgcmV0dXJuIHNSR0IuZnJvbVhZWihMQUIudG9YWVoobGFiKSk7Cn0="},{"version":3,"mappings":"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","names":["keys","colorToInt","intToHex","colorToHex","sRGB","LAB","parse","theme","isItem","variations","anchor","variant","colors","Object","parsedTheme","i","length","name","value","base","startsWith","genVariations","primary","genBaseColor","genVariantColor","split","type","n","genColorVariableName","genColorVariable","genStyles","cssVar","variablesCss","css","aColor","variants","variantValue","values","lighten","darken","amount","lab","fromXYZ","toXYZ"],"sourceRoot":"","sources":["../../../src/services/theme/utils.ts"],"sourcesContent":["import { keys } from '../../util/helpers'\nimport { colorToInt, intToHex, colorToHex, ColorInt } from '../../util/colorUtils'\nimport * as sRGB from '../../util/color/transformSRGB'\nimport * as LAB from '../../util/color/transformCIELAB'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemeItem,\n} from 'vuetify/types/services/theme'\n\nexport function parse (\n  theme: Record<string, VuetifyThemeItem>,\n  isItem = false,\n  variations = true,\n): VuetifyParsedTheme {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n  const parsedTheme: any = {}\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    if (value == null) continue\n\n    if (!variations) {\n      parsedTheme[name] = { base: intToHex(colorToInt(value)) }\n    } else if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value)\n      }\n    } else if (typeof value === 'object') {\n      parsedTheme[name] = parse(value, true, variations)\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value))\n    }\n  }\n\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base\n  }\n\n  return parsedTheme\n}\n\n/**\n * Generate the CSS for a base color (.primary)\n */\nconst genBaseColor = (name: string, value: string): string => {\n  return `\n.v-application .${name} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\nconst genVariantColor = (name: string, variant: string, value: string): string => {\n  const [type, n] = variant.split(/(\\d)/, 2)\n  return `\n.v-application .${name}.${type}-${n} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text.text--${type}-${n} {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\nconst genColorVariableName = (name: string, variant = 'base'): string => `--v-${name}-${variant}`\n\nconst genColorVariable = (name: string, variant = 'base'): string => `var(${genColorVariableName(name, variant)})`\n\nexport function genStyles (theme: VuetifyParsedTheme, cssVar = false): string {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n\n  if (!colors.length) return ''\n\n  let variablesCss = ''\n  let css = ''\n\n  const aColor = cssVar ? genColorVariable('anchor') : anchor\n  css += `.v-application a { color: ${aColor}; }`\n  cssVar && (variablesCss += `  ${genColorVariableName('anchor')}: ${anchor};\\n`)\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base)\n    cssVar && (variablesCss += `  ${genColorVariableName(name)}: ${value.base};\\n`)\n\n    const variants = keys(value)\n    for (let i = 0; i < variants.length; ++i) {\n      const variant = variants[i]\n      const variantValue = value[variant]\n      if (variant === 'base') continue\n\n      css += genVariantColor(name, variant, cssVar ? genColorVariable(name, variant) : variantValue)\n      cssVar && (variablesCss += `  ${genColorVariableName(name, variant)}: ${variantValue};\\n`)\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = `:root {\\n${variablesCss}}\\n\\n`\n  }\n\n  return variablesCss + css\n}\n\nexport function genVariations (name: string, value: ColorInt): Record<string, string> {\n  const values: Record<string, string> = {\n    base: intToHex(value),\n  }\n\n  for (let i = 5; i > 0; --i) {\n    values[`lighten${i}`] = intToHex(lighten(value, i))\n  }\n\n  for (let i = 1; i <= 4; ++i) {\n    values[`darken${i}`] = intToHex(darken(value, i))\n  }\n\n  return values\n}\n\nexport function lighten (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n\nexport function darken (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n"]}]}