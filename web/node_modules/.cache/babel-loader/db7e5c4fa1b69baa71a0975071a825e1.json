{"remainingRequest":"/home/chengege/AWS-Panel-master/web/node_modules/thread-loader/dist/cjs.js!/home/chengege/AWS-Panel-master/web/node_modules/babel-loader/lib/index.js!/home/chengege/AWS-Panel-master/web/node_modules/vuetify/lib/mixins/scrollable/index.js","dependencies":[{"path":"/home/chengege/AWS-Panel-master/web/node_modules/vuetify/lib/mixins/scrollable/index.js","mtime":499162500000},{"path":"/home/chengege/AWS-Panel-master/web/babel.config.js","mtime":1652337639000},{"path":"/home/chengege/AWS-Panel-master/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chengege/AWS-Panel-master/web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chengege/AWS-Panel-master/web/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKLy8gRGlyZWN0aXZlcwppbXBvcnQgeyBTY3JvbGwgfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzJzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgeyBjb25zb2xlV2FybiB9IGZyb20gJy4uLy4uL3V0aWwvY29uc29sZSc7IC8vIFR5cGVzCgppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7Ci8qKgogKiBTY3JvbGxhYmxlCiAqCiAqIFVzZWQgZm9yIG1vbml0b3Jpbmcgc2Nyb2xsaW5nIGFuZAogKiBpbnZva2luZyBmdW5jdGlvbnMgYmFzZWQgdXBvbgogKiBzY3JvbGxpbmcgdGhyZXNob2xkcyBiZWluZwogKiBtZXQuCiAqLwoKLyogQHZ1ZS9jb21wb25lbnQgKi8KCmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoewogIG5hbWU6ICdzY3JvbGxhYmxlJywKICBkaXJlY3RpdmVzOiB7CiAgICBTY3JvbGw6IFNjcm9sbAogIH0sCiAgcHJvcHM6IHsKICAgIHNjcm9sbFRhcmdldDogU3RyaW5nLAogICAgc2Nyb2xsVGhyZXNob2xkOiBbU3RyaW5nLCBOdW1iZXJdCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3VycmVudFNjcm9sbDogMCwKICAgICAgY3VycmVudFRocmVzaG9sZDogMCwKICAgICAgaXNBY3RpdmU6IGZhbHNlLAogICAgICBpc1Njcm9sbGluZ1VwOiBmYWxzZSwKICAgICAgcHJldmlvdXNTY3JvbGw6IDAsCiAgICAgIHNhdmVkU2Nyb2xsOiAwLAogICAgICB0YXJnZXQ6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgLyoqCiAgICAgKiBBIGNvbXB1dGVkIHByb3BlcnR5IHRoYXQgcmV0dXJucwogICAgICogd2hldGhlciBzY3JvbGxpbmcgZmVhdHVyZXMgYXJlCiAgICAgKiBlbmFibGVkIG9yIGRpc2FibGVkCiAgICAgKi8KICAgIGNhblNjcm9sbDogZnVuY3Rpb24gY2FuU2Nyb2xsKCkgewogICAgICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7CiAgICB9LAoKICAgIC8qKgogICAgICogVGhlIHRocmVzaG9sZCB0aGF0IG11c3QgYmUgbWV0IGJlZm9yZQogICAgICogdGhyZXNob2xkTWV0IGZ1bmN0aW9uIGlzIGludm9rZWQKICAgICAqLwogICAgY29tcHV0ZWRTY3JvbGxUaHJlc2hvbGQ6IGZ1bmN0aW9uIGNvbXB1dGVkU2Nyb2xsVGhyZXNob2xkKCkgewogICAgICByZXR1cm4gdGhpcy5zY3JvbGxUaHJlc2hvbGQgPyBOdW1iZXIodGhpcy5zY3JvbGxUaHJlc2hvbGQpIDogMzAwOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGlzU2Nyb2xsaW5nVXA6IGZ1bmN0aW9uIGlzU2Nyb2xsaW5nVXAoKSB7CiAgICAgIHRoaXMuc2F2ZWRTY3JvbGwgPSB0aGlzLnNhdmVkU2Nyb2xsIHx8IHRoaXMuY3VycmVudFNjcm9sbDsKICAgIH0sCiAgICBpc0FjdGl2ZTogZnVuY3Rpb24gaXNBY3RpdmUoKSB7CiAgICAgIHRoaXMuc2F2ZWRTY3JvbGwgPSAwOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLnNjcm9sbFRhcmdldCkgewogICAgICB0aGlzLnRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zY3JvbGxUYXJnZXQpOwoKICAgICAgaWYgKCF0aGlzLnRhcmdldCkgewogICAgICAgIGNvbnNvbGVXYXJuKCJVbmFibGUgdG8gbG9jYXRlIGVsZW1lbnQgd2l0aCBpZGVudGlmaWVyICIuY29uY2F0KHRoaXMuc2Nyb2xsVGFyZ2V0KSwgdGhpcyk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uU2Nyb2xsOiBmdW5jdGlvbiBvblNjcm9sbCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5jYW5TY3JvbGwpIHJldHVybjsKICAgICAgdGhpcy5wcmV2aW91c1Njcm9sbCA9IHRoaXMuY3VycmVudFNjcm9sbDsKICAgICAgdGhpcy5jdXJyZW50U2Nyb2xsID0gdGhpcy50YXJnZXQgPyB0aGlzLnRhcmdldC5zY3JvbGxUb3AgOiB3aW5kb3cucGFnZVlPZmZzZXQ7CiAgICAgIHRoaXMuaXNTY3JvbGxpbmdVcCA9IHRoaXMuY3VycmVudFNjcm9sbCA8IHRoaXMucHJldmlvdXNTY3JvbGw7CiAgICAgIHRoaXMuY3VycmVudFRocmVzaG9sZCA9IE1hdGguYWJzKHRoaXMuY3VycmVudFNjcm9sbCAtIHRoaXMuY29tcHV0ZWRTY3JvbGxUaHJlc2hvbGQpOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKE1hdGguYWJzKF90aGlzLmN1cnJlbnRTY3JvbGwgLSBfdGhpcy5zYXZlZFNjcm9sbCkgPiBfdGhpcy5jb21wdXRlZFNjcm9sbFRocmVzaG9sZCkgX3RoaXMudGhyZXNob2xkTWV0KCk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFRoZSBtZXRob2QgaW52b2tlZCB3aGVuCiAgICAgKiBzY3JvbGxpbmcgaW4gYW55IGRpcmVjdGlvbgogICAgICogaGFzIGV4Y2VlZGVkIHRoZSB0aHJlc2hvbGQKICAgICAqLwogICAgdGhyZXNob2xkTWV0OiBmdW5jdGlvbiB0aHJlc2hvbGRNZXQoKSB7fQogIH0KfSk7"},{"version":3,"mappings":";AAAA;AACA,SAASA,MAAT,QAAuB,kBAAvB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,oBAA5B,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA;;;;;;;AAOG;;AACH;;AACA,eAAeA,GAAG,CAACC,MAAJ,CAAW;EACxBC,IAAI,EAAE,YADkB;EAGxBC,UAAU,EAAE;IAAEL;EAAF,CAHY;EAKxBM,KAAK,EAAE;IACLC,YAAY,EAAEC,MADT;IAELC,eAAe,EAAE,CAACD,MAAD,EAASE,MAAT;EAFZ,CALiB;EAUxBC,IAAI,EAAE;IAAA,OAAO;MACXC,aAAa,EAAE,CADJ;MAEXC,gBAAgB,EAAE,CAFP;MAGXC,QAAQ,EAAE,KAHC;MAIXC,aAAa,EAAE,KAJJ;MAKXC,cAAc,EAAE,CALL;MAMXC,WAAW,EAAE,CANF;MAOXC,MAAM,EAAE;IAPG,CAAP;EAAA,CAVkB;EAoBxBC,QAAQ,EAAE;IACR;;;;AAIG;IACHC,SANQ,uBAMC;MACP,OAAO,OAAOC,MAAP,KAAkB,WAAzB;IAPM;;IASR;;;AAGG;IACHC,uBAbQ,qCAae;MACrB,OAAO,KAAKb,eAAL,GACHC,MAAM,CAAC,KAAKD,eAAN,CADH,GAEH,GAFJ;IAGD;EAjBO,CApBc;EAwCxBc,KAAK,EAAE;IACLR,aADK,2BACQ;MACX,KAAKE,WAAL,GAAmB,KAAKA,WAAL,IAAoB,KAAKL,aAA5C;IAFG;IAILE,QAJK,sBAIG;MACN,KAAKG,WAAL,GAAmB,CAAnB;IACD;EANI,CAxCiB;EAiDxBO,OAjDwB,qBAiDjB;IACL,IAAI,KAAKjB,YAAT,EAAuB;MACrB,KAAKW,MAAL,GAAcO,QAAQ,CAACC,aAAT,CAAuB,KAAKnB,YAA5B,CAAd;;MAEA,IAAI,CAAC,KAAKW,MAAV,EAAkB;QAChBjB,WAAW,oDAA6C,KAAKM,YAAlD,GAAkE,IAAlE,CAAX;MACD;IACF;EAxDqB;EA2DxBoB,OAAO,EAAE;IACPC,QADO,sBACC;MAAA;;MACN,IAAI,CAAC,KAAKR,SAAV,EAAqB;MAErB,KAAKJ,cAAL,GAAsB,KAAKJ,aAA3B;MACA,KAAKA,aAAL,GAAqB,KAAKM,MAAL,GACjB,KAAKA,MAAL,CAAYW,SADK,GAEjBR,MAAM,CAACS,WAFX;MAIA,KAAKf,aAAL,GAAqB,KAAKH,aAAL,GAAqB,KAAKI,cAA/C;MACA,KAAKH,gBAAL,GAAwBkB,IAAI,CAACC,GAAL,CAAS,KAAKpB,aAAL,GAAqB,KAAKU,uBAAnC,CAAxB;MAEA,KAAKW,SAAL,CAAe,YAAK;QAClB,IACEF,IAAI,CAACC,GAAL,CAAS,MAAKpB,aAAL,GAAqB,MAAKK,WAAnC,IACA,MAAKK,uBAFP,EAGE,MAAKY,YAAL;MAJJ;IAZK;;IAmBP;;;;AAIG;IACHA,YAxBO,0BAwBK,CAAkB;EAxBvB;AA3De,CAAX,CAAf","names":["Scroll","consoleWarn","Vue","extend","name","directives","props","scrollTarget","String","scrollThreshold","Number","data","currentScroll","currentThreshold","isActive","isScrollingUp","previousScroll","savedScroll","target","computed","canScroll","window","computedScrollThreshold","watch","mounted","document","querySelector","methods","onScroll","scrollTop","pageYOffset","Math","abs","$nextTick","thresholdMet"],"sourceRoot":"","sources":["../../../src/mixins/scrollable/index.ts"],"sourcesContent":["// Directives\nimport { Scroll } from '../../directives'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\n/**\n * Scrollable\n *\n * Used for monitoring scrolling and\n * invoking functions based upon\n * scrolling thresholds being\n * met.\n */\n/* @vue/component */\nexport default Vue.extend({\n  name: 'scrollable',\n\n  directives: { Scroll },\n\n  props: {\n    scrollTarget: String,\n    scrollThreshold: [String, Number],\n  },\n\n  data: () => ({\n    currentScroll: 0,\n    currentThreshold: 0,\n    isActive: false,\n    isScrollingUp: false,\n    previousScroll: 0,\n    savedScroll: 0,\n    target: null as Element | null,\n  }),\n\n  computed: {\n    /**\n     * A computed property that returns\n     * whether scrolling features are\n     * enabled or disabled\n     */\n    canScroll (): boolean {\n      return typeof window !== 'undefined'\n    },\n    /**\n     * The threshold that must be met before\n     * thresholdMet function is invoked\n     */\n    computedScrollThreshold (): number {\n      return this.scrollThreshold\n        ? Number(this.scrollThreshold)\n        : 300\n    },\n  },\n\n  watch: {\n    isScrollingUp () {\n      this.savedScroll = this.savedScroll || this.currentScroll\n    },\n    isActive () {\n      this.savedScroll = 0\n    },\n  },\n\n  mounted () {\n    if (this.scrollTarget) {\n      this.target = document.querySelector(this.scrollTarget)\n\n      if (!this.target) {\n        consoleWarn(`Unable to locate element with identifier ${this.scrollTarget}`, this)\n      }\n    }\n  },\n\n  methods: {\n    onScroll () {\n      if (!this.canScroll) return\n\n      this.previousScroll = this.currentScroll\n      this.currentScroll = this.target\n        ? this.target.scrollTop\n        : window.pageYOffset\n\n      this.isScrollingUp = this.currentScroll < this.previousScroll\n      this.currentThreshold = Math.abs(this.currentScroll - this.computedScrollThreshold)\n\n      this.$nextTick(() => {\n        if (\n          Math.abs(this.currentScroll - this.savedScroll) >\n          this.computedScrollThreshold\n        ) this.thresholdMet()\n      })\n    },\n    /**\n     * The method invoked when\n     * scrolling in any direction\n     * has exceeded the threshold\n     */\n    thresholdMet () { /* noop */ },\n  },\n})\n"]}]}